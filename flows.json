[
    {
        "id": "60e059d3.b0f6b8",
        "type": "tab",
        "label": "Configuracion",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7ee81df4.bfea84",
        "type": "tab",
        "label": "Integrations",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c289f04a.5490c",
        "type": "tab",
        "label": "PSeguros - Consultas",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7ee549ef.0fbb28",
        "type": "tab",
        "label": "PSeguros - Cotizaciones",
        "disabled": false,
        "info": ""
    },
    {
        "id": "351b2b12.3dfcd4",
        "type": "tab",
        "label": "Test",
        "disabled": false,
        "info": ""
    },
    {
        "id": "248b9587.09adfa",
        "type": "subflow",
        "name": "PSeguros - Auth",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 460,
                "y": 380,
                "wires": [
                    {
                        "id": "53aa28bc.29bf98"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1380,
                "y": 380,
                "wires": [
                    {
                        "id": "e952cbad.53cbd8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "c0a2e33c.1511f",
        "type": "telegram bot",
        "botname": "PSegurosBot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "3f4b9f1f.e14f1",
        "type": "telegram receiver",
        "z": "7ee81df4.bfea84",
        "name": "",
        "bot": "c0a2e33c.1511f",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 190,
        "y": 220,
        "wires": [
            [
                "93d23625.10d5f8",
                "c0f41767.f57208"
            ],
            []
        ]
    },
    {
        "id": "e78ac438.3320e8",
        "type": "telegram sender",
        "z": "7ee81df4.bfea84",
        "name": "",
        "bot": "c0a2e33c.1511f",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1190,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "93d23625.10d5f8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Telegram receiver",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "63a91f15.a4e6a",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "New visitor",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://rocket.it.mindbot.com.ar/api/v1/livechat/visitor",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1490,
        "y": 360,
        "wires": [
            [
                "51a1093e.9a7ff8",
                "dfed7cc7.c7027"
            ]
        ]
    },
    {
        "id": "79f5db67.0cb104",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Payload",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/visitor#payload\n\n//Obtener datos de Telegram\nlet fullName = msg.originalMessage.from.first_name + \" \" + msg.originalMessage.from.last_name;\n//Usar id de Usuario de Telegram como TOKEN - lo espera en String\nlet token = msg.originalMessage.from.id.toString()\n\nlet visitor = {};\n\nvisitor.name = fullName;\nvisitor.token = token;\nvisitor.customFields = [];\n\n//Custom Field para informar el CANAL\n\nvisitor.customFields.push({key:\"chanel\", value:\"telegram\", overwrite:true});\n\nmsg.payload = {};\nmsg.payload.visitor = visitor;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "74e7208b.04a33",
                "63a91f15.a4e6a"
            ]
        ]
    },
    {
        "id": "74e7208b.04a33",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 300,
        "wires": []
    },
    {
        "id": "c0f41767.f57208",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data Payload",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/visitor#payload\n\n//Usar id de Usuario de Telegram como TOKEN\nlet token = msg.originalMessage.from.id\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/visitor/\" + token;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "22826c11.f10fb4"
            ]
        ]
    },
    {
        "id": "22826c11.f10fb4",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 820,
        "y": 200,
        "wires": [
            [
                "7ab5d913.53ffa8",
                "ea9d6124.d69fd",
                "db404bb5.08c118"
            ]
        ]
    },
    {
        "id": "7ab5d913.53ffa8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 60,
        "wires": []
    },
    {
        "id": "51a1093e.9a7ff8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 300,
        "wires": []
    },
    {
        "id": "d8a93589.9ba8f8",
        "type": "comment",
        "z": "7ee81df4.bfea84",
        "name": "Example response",
        "info": "{\"visitor\":{\"_id\":\"5NeTKRb5YzZ4wE3Mi\",\"username\":\"guest-6\",\"ts\":\"2021-01-19T12:26:32.789Z\",\"ip\":\"192.168.1.1\",\"host\":\"rocket.it.mindbot.com.ar\",\"_updatedAt\":\"2021-01-19T12:26:32.791Z\",\"name\":\"Andres Petrillo\",\"token\":\"869282068\"},\"success\":true}\n\n{\"visitor\":{\"_id\":\"5NeTKRb5YzZ4wE3Mi\",\"username\":\"guest-6\",\"ts\":\"2021-01-19T12:26:32.789Z\",\"ip\":\"192.168.1.1\",\"host\":\"rocket.it.mindbot.com.ar\",\"_updatedAt\":\"2021-01-19T12:26:32.791Z\",\"name\":\"Andres Petrillo\",\"token\":\"869282068\"},\"success\":true}",
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "db404bb5.08c118",
        "type": "switch",
        "z": "7ee81df4.bfea84",
        "name": "Check visitor exists",
        "property": "payload.visitor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "4c4953ed.decb2c",
                "dfed7cc7.c7027"
            ],
            [
                "79f5db67.0cb104",
                "9de6f676.6b1328"
            ]
        ]
    },
    {
        "id": "dfed7cc7.c7027",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get config (Obtengo room)",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\nlet token = msg.originalMessage.from.id\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/config?token=\" + token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1700,
        "y": 200,
        "wires": [
            [
                "506b3875.adacc8"
            ]
        ]
    },
    {
        "id": "506b3875.adacc8",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get config",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1950,
        "y": 200,
        "wires": [
            [
                "4551ea09.6b2dc4"
            ]
        ]
    },
    {
        "id": "ea9d6124.d69fd",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Visitor data to json",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 60,
        "wires": []
    },
    {
        "id": "4551ea09.6b2dc4",
        "type": "json",
        "z": "7ee81df4.bfea84",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2130,
        "y": 200,
        "wires": [
            [
                "bfe45ba3.557ce8",
                "3e8ca4e8.4b9dfc"
            ]
        ]
    },
    {
        "id": "bfe45ba3.557ce8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "to json",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2430,
        "y": 60,
        "wires": []
    },
    {
        "id": "2af94aa3.5b5f46",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\n\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/message\"\n\nlet originalPayload = msg.payload;\n\nmsg.payload = {};\nmsg.payload.token = originalPayload.config.guest.token;\nmsg.payload.rid = originalPayload.config.room._id;\nmsg.payload.msg = msg.originalMessage.text;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2660,
        "y": 200,
        "wires": [
            [
                "fd8c9753.82cf18"
            ]
        ]
    },
    {
        "id": "f60f6e8b.26885",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3080,
        "y": 60,
        "wires": []
    },
    {
        "id": "4c4953ed.decb2c",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "visitor EXISTS",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 140,
        "wires": []
    },
    {
        "id": "9de6f676.6b1328",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "visitor NOT EXISTS",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 420,
        "wires": []
    },
    {
        "id": "3e8ca4e8.4b9dfc",
        "type": "switch",
        "z": "7ee81df4.bfea84",
        "name": "Check room exists",
        "property": "payload.config.room",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2350,
        "y": 200,
        "wires": [
            [
                "2af94aa3.5b5f46"
            ],
            [
                "98c2632b.e833a"
            ]
        ]
    },
    {
        "id": "98c2632b.e833a",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get room (crear room)",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\nlet token = msg.originalMessage.from.id\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/room?token=\" + token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2380,
        "y": 320,
        "wires": [
            [
                "414289d5.96b3b8"
            ]
        ]
    },
    {
        "id": "414289d5.96b3b8",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get room",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2620,
        "y": 320,
        "wires": [
            [
                "1fab54c.98015ab"
            ]
        ]
    },
    {
        "id": "1fab54c.98015ab",
        "type": "json",
        "z": "7ee81df4.bfea84",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2810,
        "y": 320,
        "wires": [
            [
                "beeafc04.2066e"
            ]
        ]
    },
    {
        "id": "beeafc04.2066e",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\n\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/message\"\n\nlet originalPayload = msg.payload;\n\nmsg.payload = {};\nmsg.payload.token = originalPayload.room.v.token;\nmsg.payload.rid = originalPayload.room._id;\nmsg.payload.msg = msg.originalMessage.text;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2980,
        "y": 320,
        "wires": [
            [
                "760fa4dc.f12d5c",
                "9fd9269a.33bfc8"
            ]
        ]
    },
    {
        "id": "760fa4dc.f12d5c",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Send Message (new Room)",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 240,
        "wires": []
    },
    {
        "id": "fd8c9753.82cf18",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Send message",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2940,
        "y": 200,
        "wires": [
            [
                "f60f6e8b.26885"
            ]
        ]
    },
    {
        "id": "9fd9269a.33bfc8",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Send message",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3240,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a813910b.42014",
        "type": "http in",
        "z": "7ee81df4.bfea84",
        "name": "Post messages from Rocket.chat",
        "url": "/messages",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 190,
        "y": 1480,
        "wires": [
            [
                "82e65057.262e2",
                "e6c9b776.ae6b68"
            ]
        ]
    },
    {
        "id": "82e65057.262e2",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Rocket.chat receiver",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1360,
        "wires": []
    },
    {
        "id": "3a9529df.ce3346",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Set message",
        "func": "//Respuesta a Telegram\n//chatId: 869282068\n//messageId: 1938\n//type: \"message\"\n//content: \"hola\"\n\nmsg.payload.chatId = msg.payload.visitor.token;\nmsg.payload.type = \"message\";\nmsg.payload.content = msg.payload.messages[0].msg;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 1360,
        "wires": [
            [
                "e78ac438.3320e8",
                "15478edd.b70101"
            ]
        ]
    },
    {
        "id": "15478edd.b70101",
        "type": "http response",
        "z": "7ee81df4.bfea84",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1160,
        "y": 1420,
        "wires": []
    },
    {
        "id": "23cef9dc.463986",
        "type": "comment",
        "z": "7ee81df4.bfea84",
        "name": "WebHook - Omnichannel",
        "info": "Todos los mensajes salientes de los operadores, seran reenviados aca.\nHay que identificar el CANAL (si es que tiene) y derivarlo correctamente.\n\n**TODO**: Adicionalmente, se generan otros mensajes, como cambio de departamento, o cierre de caso, que debemos procesar correctamente.",
        "x": 170,
        "y": 1520,
        "wires": []
    },
    {
        "id": "e6c9b776.ae6b68",
        "type": "switch",
        "z": "7ee81df4.bfea84",
        "name": "Switch canal",
        "property": "payload.visitor.customFields.chanel",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "telegram",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "whatsapp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 1480,
        "wires": [
            [
                "3a9529df.ce3346"
            ],
            [
                "8bfe58f7.33d068",
                "76b872b1.5c0dec"
            ],
            [
                "6b5f84ff.2ec08c"
            ]
        ]
    },
    {
        "id": "6b5f84ff.2ec08c",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "WebHook SIN procesar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1580,
        "wires": []
    },
    {
        "id": "c40adad0.7fef58",
        "type": "comment",
        "z": "7ee81df4.bfea84",
        "name": "TODO: Check ROOM or DEPARTMENT???",
        "info": "",
        "x": 2510,
        "y": 140,
        "wires": []
    },
    {
        "id": "76b872b1.5c0dec",
        "type": "http response",
        "z": "7ee81df4.bfea84",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 660,
        "y": 1660,
        "wires": []
    },
    {
        "id": "45b8e400.ff61fc",
        "type": "catch",
        "z": "7ee81df4.bfea84",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1570,
        "y": 1040,
        "wires": [
            [
                "de1a14f9.c3e948"
            ]
        ]
    },
    {
        "id": "de1a14f9.c3e948",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Error",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 1060,
        "wires": []
    },
    {
        "id": "9f55ee15.5d98a",
        "type": "http in",
        "z": "7ee81df4.bfea84",
        "name": "Webhook from whatsapp",
        "url": "/whatsapp/inbound",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "62fe07d7.edbfd8",
                "792d7f15.1913a",
                "230558cb.e84f88"
            ]
        ]
    },
    {
        "id": "62fe07d7.edbfd8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Whatsapp receiver",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 700,
        "wires": []
    },
    {
        "id": "792d7f15.1913a",
        "type": "http response",
        "z": "7ee81df4.bfea84",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 320,
        "y": 980,
        "wires": []
    },
    {
        "id": "426449b7.49f8b8",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "New visitor",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://rocket.it.mindbot.com.ar/api/v1/livechat/visitor",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1410,
        "y": 940,
        "wires": [
            [
                "56dfe2c5.cc323c",
                "176966ef.dae549"
            ]
        ]
    },
    {
        "id": "a14f41cc.7bee1",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Payload",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/visitor#payload\n\n//Obtener datos de Telegram\nlet fullName = msg.originalMessage.results[0].contact.name;\n\n//Usar nro de telefono de WhatsApp - lo espera en String\nlet token = msg.originalMessage.results[0].from;\n\nlet visitor = {};\n\nvisitor.name = fullName;\nvisitor.token = token;\nvisitor.customFields = [];\n\n//Custom Field para informar el CANAL\nlet phone = token;\n\nvisitor.customFields.push({key:\"chanel\", value:\"whatsapp\", overwrite:true});\n//TODO: Agregar dato de BOT vs de Agente (customFields)\nvisitor.customFields.push({key:\"phone\", value:token, overwrite:true});\n\nmsg.payload = {};\nmsg.payload.visitor = visitor;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 940,
        "wires": [
            [
                "e7cf9009.e204",
                "426449b7.49f8b8"
            ]
        ]
    },
    {
        "id": "e7cf9009.e204",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 880,
        "wires": []
    },
    {
        "id": "230558cb.e84f88",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data Payload",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/visitor#payload\n\n//Usar nro de telefono de WhatsApp como TOKEN\n//Guardo el mensaje original\nlet originalMessage = msg.payload;\nmsg.originalMessage = originalMessage;\n\nlet token = msg.originalMessage.results[0].from;\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/visitor/\" + token;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 780,
        "wires": [
            [
                "29f0e9db.4a95f6"
            ]
        ]
    },
    {
        "id": "29f0e9db.4a95f6",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 740,
        "y": 780,
        "wires": [
            [
                "1dbe982f.7899f8",
                "dabd246d.c50d88"
            ]
        ]
    },
    {
        "id": "1dbe982f.7899f8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "56dfe2c5.cc323c",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 880,
        "wires": []
    },
    {
        "id": "baad55e3.dd67f8",
        "type": "comment",
        "z": "7ee81df4.bfea84",
        "name": "Example response",
        "info": "{\"visitor\":{\"_id\":\"5NeTKRb5YzZ4wE3Mi\",\"username\":\"guest-6\",\"ts\":\"2021-01-19T12:26:32.789Z\",\"ip\":\"192.168.1.1\",\"host\":\"rocket.it.mindbot.com.ar\",\"_updatedAt\":\"2021-01-19T12:26:32.791Z\",\"name\":\"Andres Petrillo\",\"token\":\"869282068\"},\"success\":true}\n\n{\"visitor\":{\"_id\":\"5NeTKRb5YzZ4wE3Mi\",\"username\":\"guest-6\",\"ts\":\"2021-01-19T12:26:32.789Z\",\"ip\":\"192.168.1.1\",\"host\":\"rocket.it.mindbot.com.ar\",\"_updatedAt\":\"2021-01-19T12:26:32.791Z\",\"name\":\"Andres Petrillo\",\"token\":\"869282068\"},\"success\":true}",
        "x": 870,
        "y": 880,
        "wires": []
    },
    {
        "id": "dabd246d.c50d88",
        "type": "switch",
        "z": "7ee81df4.bfea84",
        "name": "Check visitor exists",
        "property": "payload.visitor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 780,
        "wires": [
            [
                "54b021e6.d83d7",
                "176966ef.dae549"
            ],
            [
                "a14f41cc.7bee1",
                "7d0bfcff.af0944"
            ]
        ]
    },
    {
        "id": "176966ef.dae549",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get config (Obtengo room)",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar nro de telefono de Wahtsapp\nlet token = msg.originalMessage.results[0].from;\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/config?token=\" + token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 780,
        "wires": [
            [
                "9e119b.93cdce68"
            ]
        ]
    },
    {
        "id": "9e119b.93cdce68",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get config",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1870,
        "y": 780,
        "wires": [
            [
                "229e7882.3652a8"
            ]
        ]
    },
    {
        "id": "229e7882.3652a8",
        "type": "json",
        "z": "7ee81df4.bfea84",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2050,
        "y": 780,
        "wires": [
            [
                "d4a778ed.12b818",
                "49d87cc1.7d91b4"
            ]
        ]
    },
    {
        "id": "d4a778ed.12b818",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "to json",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 640,
        "wires": []
    },
    {
        "id": "f18bd20f.73c6c",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\n\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/message\"\n\nlet originalPayload = msg.payload;\n\nmsg.payload = {};\nmsg.payload.token = originalPayload.config.guest.token;\nmsg.payload.rid = originalPayload.config.room._id;\nmsg.payload.msg = msg.originalMessage.results[0].message.text;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2580,
        "y": 780,
        "wires": [
            [
                "3907b8a4.e28e88"
            ]
        ]
    },
    {
        "id": "562dd6e6.acaf78",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3000,
        "y": 640,
        "wires": []
    },
    {
        "id": "54b021e6.d83d7",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "visitor EXISTS",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 720,
        "wires": []
    },
    {
        "id": "7d0bfcff.af0944",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "visitor NOT EXISTS",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 1000,
        "wires": []
    },
    {
        "id": "49d87cc1.7d91b4",
        "type": "switch",
        "z": "7ee81df4.bfea84",
        "name": "Check room exists",
        "property": "payload.config.room",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2270,
        "y": 780,
        "wires": [
            [
                "f18bd20f.73c6c"
            ],
            [
                "8f25fb78.5d9c68"
            ]
        ]
    },
    {
        "id": "8f25fb78.5d9c68",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get room (crear room)",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar telefono de WhatsApp como TOKEN\nlet token = msg.originalMessage.results[0].from;\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/room?token=\" + token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2300,
        "y": 900,
        "wires": [
            [
                "52f1b528.c5b1cc"
            ]
        ]
    },
    {
        "id": "52f1b528.c5b1cc",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get room",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2540,
        "y": 900,
        "wires": [
            [
                "8c284ea4.6cb3b",
                "236503ab.0aacfc"
            ]
        ]
    },
    {
        "id": "8c284ea4.6cb3b",
        "type": "json",
        "z": "7ee81df4.bfea84",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2730,
        "y": 900,
        "wires": [
            [
                "32a393d9.c16a9c"
            ]
        ]
    },
    {
        "id": "32a393d9.c16a9c",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\n\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/message\"\n\nlet originalPayload = msg.payload;\n\nmsg.payload = {};\nmsg.payload.token = originalPayload.room.v.token;\nmsg.payload.rid = originalPayload.room._id;\nmsg.payload.msg = msg.originalMessage[0].message.text;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2900,
        "y": 900,
        "wires": [
            [
                "59a9d5ce.eb061c",
                "7b92ba36.fe3b44"
            ]
        ]
    },
    {
        "id": "59a9d5ce.eb061c",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Send Message (new Room)",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3200,
        "y": 820,
        "wires": []
    },
    {
        "id": "3907b8a4.e28e88",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Send message",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2860,
        "y": 780,
        "wires": [
            [
                "562dd6e6.acaf78"
            ]
        ]
    },
    {
        "id": "7b92ba36.fe3b44",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Send message",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3160,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "d2432921.d9d298",
        "type": "comment",
        "z": "7ee81df4.bfea84",
        "name": "TODO: Check ROOM or DEPARTMENT???",
        "info": "",
        "x": 2430,
        "y": 720,
        "wires": []
    },
    {
        "id": "8bfe58f7.33d068",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Set message",
        "func": "//Respuesta a Whatsapp\n//chatId: 869282068\n//messageId: 1938\n//type: \"message\"\n//content: \"hola\"\nmsg.headers = {};\nmsg.headers['Authorization'] = \"App 9e66295544f076806ab9751a06f65722-dc79f206-56d4-4e42-b14a-61d60c4b36e0\";\nmsg.headers['Content-Type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n \nmsg.payload.scenarioKey = \"E1DC1DBC2BEED01B894E15AD3AEA64DA\";\nmsg.payload.destinations = [];\nmsg.payload.whatsApp = {};\n\nlet destination = {};\nlet to= {};\n\n//Nro de telefono del cliente\nto.phoneNumber = msg.payload.visitor.token;\ndestination.to = to;\n\nmsg.payload.destinations.push(destination);\n\nlet text = msg.payload.messages[0].msg || \"Ver archivo adjunto\";\n\nmsg.payload.whatsApp.text =text ;\n\n//Si tiene attachment\nif(msg.payload.messages[0].fileUpload) {\n    //TODO: Revisar tipo de mensaje\n    \n    if (msg.payload.messages[0].fileUpload.type.toLowerCase().includes(\"image\")) {\n        msg.payload.whatsApp.imageUrl = msg.payload.messages[0].fileUpload.publicFilePath;\n    }\n    \n    if (msg.payload.messages[0].fileUpload.type.toLowerCase().includes(\"application\")) {\n        msg.payload.whatsApp.fileUrl = msg.payload.messages[0].fileUpload.publicFilePath;\n    }\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 1480,
        "wires": [
            [
                "60d612db.6df9dc",
                "d4471d75.eba42",
                "9289a7ad.1e2618"
            ]
        ]
    },
    {
        "id": "60d612db.6df9dc",
        "type": "http response",
        "z": "7ee81df4.bfea84",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1180,
        "y": 1540,
        "wires": []
    },
    {
        "id": "236503ab.0aacfc",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Get room",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2700,
        "y": 980,
        "wires": []
    },
    {
        "id": "d4471d75.eba42",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Whatsapp Message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1640,
        "wires": []
    },
    {
        "id": "9289a7ad.1e2618",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mp9856.api.infobip.com/omni/1/advanced",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1190,
        "y": 1480,
        "wires": [
            [
                "9e9b55d3.fcdd78"
            ]
        ]
    },
    {
        "id": "9e9b55d3.fcdd78",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Infobip Send Advanced",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1480,
        "wires": []
    },
    {
        "id": "66fe2f7b.a21dd",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/car/brand/:brandName",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 100,
        "wires": [
            [
                "cd412cd6.d883",
                "7c91ca0f.0ff924"
            ]
        ]
    },
    {
        "id": "47bf6c1.9169a94",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Marcas",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 510,
        "y": 240,
        "wires": [
            [
                "ef867495.5b0568",
                "8ef60da5.20b09"
            ]
        ]
    },
    {
        "id": "b32cf65f.ced7b8",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - brands",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 320,
        "wires": []
    },
    {
        "id": "836bf80b.747198",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Marcas",
        "func": "//Primero guardo marca que busco\nmsg.searchCriteria = msg.req.params.brandName; \n\nmsg.url = global.get(\"psegurosCotizacion_Url\") + \"valores/marcas/4/04100?apikey=\" + global.get(\"psegurosApiKey\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 240,
        "wires": [
            [
                "47bf6c1.9169a94",
                "1e69d6bf.aefc39"
            ]
        ]
    },
    {
        "id": "cd412cd6.d883",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Car/Brand",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "af4b0342.00155",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "function Response",
        "func": "let response = msg.results[0];\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 240,
        "wires": [
            [
                "8e7b71c6.29843"
            ]
        ]
    },
    {
        "id": "8e7b71c6.29843",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 100,
        "wires": []
    },
    {
        "id": "603fcb43.3f0794",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/car/model/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 500,
        "wires": [
            [
                "c7925d5e.b2c4e",
                "e9b1bab8.be9688"
            ]
        ]
    },
    {
        "id": "c7925d5e.b2c4e",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Car/Model",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 460,
        "wires": []
    },
    {
        "id": "d5f623bc.09378",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Modelo",
        "func": "//Primero guardo modelo que busco\nmsg.searchCriteria = msg.payload.model; \n\n//msg.url = \"https://apimt.provinciaseguros.com.ar/gateway/PS/PS-COTIZACION/2.2/valores/marcas/4/04100?apikey=9cc893f8-//c119-4eeb-8d68-a3d305927fed\";\n\nmsg.url = global.get(\"psegurosCotizacion_Url\") + `valores/modelo/4/04100/${msg.payload.brand}/${msg.payload.year}/${msg.payload.new}?apikey=` + global.get(\"psegurosApiKey\");\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 640,
        "wires": [
            [
                "75b05f2f.efc48"
            ]
        ]
    },
    {
        "id": "8b524e35.de3c7",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "model",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "75b05f2f.efc48",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Modelos",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 620,
        "y": 640,
        "wires": [
            [
                "8b524e35.de3c7",
                "764e2a97.a29284"
            ]
        ]
    },
    {
        "id": "ab3a6e0d.08228",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1330,
        "y": 500,
        "wires": []
    },
    {
        "id": "f90bbab4.8648b8",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "function Response",
        "func": "let response = msg.results;\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 640,
        "wires": [
            [
                "ab3a6e0d.08228"
            ]
        ]
    },
    {
        "id": "84bcab1e.218388",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/quotation",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1060,
        "wires": [
            [
                "bf1e0de8.73f14",
                "32ed8f25.6e21a"
            ]
        ]
    },
    {
        "id": "8d1f8743.53ca18",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Cotizacion",
        "func": "msg.url = global.get(\"psegurosCotizacion_Url\") + `cotizar?apikey=` + global.get(\"psegurosApiKey\");\n\nlet bodyCotizacion = {};\n\nlet year = msg.payload.year;\nlet newCar = msg.payload.new;\nlet brand = msg.payload.brand;\nlet model = msg.payload.model;\nlet zipcode = msg.payload.zipcode;\nlet gender = msg.payload.gender;\nlet province = msg.payload.province;\n\nbodyCotizacion.bien = {};\nbodyCotizacion.bien[\"40012_anio\"] = year;\nbodyCotizacion.bien[\"40013_es0km\"] = newCar;\nbodyCotizacion.bien[\"40020_marca\"] = brand;\nbodyCotizacion.bien[\"40021_modelo\"] = model;\nbodyCotizacion.bien[\"900008_codPostal\"] = zipcode;\nbodyCotizacion.bien[\"40086_genero\"] = gender;\nbodyCotizacion.bien[\"40008_Uso\"] = \"1\";\nbodyCotizacion.bien.montoAccesorios = \"0\"; // por ahora hardcode\n\nbodyCotizacion.ramoProducto = {};\nbodyCotizacion.ramoProducto.ramo = \"4\";\nbodyCotizacion.ramoProducto.producto = \"04100\";\n\nbodyCotizacion.datosGenerales = {};\nbodyCotizacion.datosGenerales.codProductor = \"15925\";\nbodyCotizacion.datosGenerales.provincia = province;\nbodyCotizacion.datosGenerales.tipoPersona = \"F\";  // unico valor aceptable (persona fisica)\nbodyCotizacion.datosGenerales.medioDePago = \"2\";\nbodyCotizacion.datosGenerales.origenDePago = \"VISO\";\nbodyCotizacion.datosGenerales.condicionIva = \"CF\";  // unico valor aceptable (consumidor final)\nbodyCotizacion.datosGenerales.cuit = \"\";\nbodyCotizacion.datosGenerales.vigencia = \"E\";\nbodyCotizacion.datosGenerales.vigenciaTecnica = \"A\";\nbodyCotizacion.datosGenerales.tipoFacturacion = \"F\";\nbodyCotizacion.datosGenerales.moneda = \"01\";\nbodyCotizacion.datosGenerales.planDePago = \"1\";\nbodyCotizacion.datosGenerales.modoDeCalculo = \"N\";\n\nbodyCotizacion.promociones = [{promocion : \"COTFIN2\"}, {promocion : \"CLIFIN\"}, {promocion : \"NOAP\"}];\n\nmsg.year = year; // se guarda el año para saber que planes corresponden mostrar\n\nmsg.payload = bodyCotizacion;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 1200,
        "wires": [
            [
                "64a30bba.f6b394"
            ]
        ]
    },
    {
        "id": "c13be3c5.cfa1e",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 3350,
        "y": 1260,
        "wires": []
    },
    {
        "id": "64a30bba.f6b394",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Cotizacion",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 600,
        "y": 1200,
        "wires": [
            [
                "777e7ab9.a18114",
                "d0e74ef4.b0846"
            ]
        ]
    },
    {
        "id": "f5665931.d4a3b8",
        "type": "inject",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "TEST!",
        "payloadType": "str",
        "x": 1550,
        "y": 600,
        "wires": [
            [
                "c2e9e61e.d28558"
            ]
        ]
    },
    {
        "id": "c2e9e61e.d28558",
        "type": "function-npm",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "const {distance, closest} = require('fastest-levenshtein');\n\nmsg.payload = {};\n\ntry {\n    // Print levenshtein-distance between 'fast' and 'faster' \nmsg.payload.distance = distance('fast', 'faster');\n//=> 2\n\n// Print string from array with lowest edit-distance to 'fast'\nmsg.payload.closest = closest('FIESTA TITANIUM', ['FIESTA  1.6 4P S              (KD) (018594)', 'FIESTA  1.6 4P TITANIUM       (KD) (018598)']);\n\n}catch (exception) {\n    node.error(\"Error\", exception)\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 600,
        "wires": [
            [
                "18b222a1.7b5e2d"
            ]
        ]
    },
    {
        "id": "18b222a1.7b5e2d",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 600,
        "wires": []
    },
    {
        "id": "764e2a97.a29284",
        "type": "function-npm",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "const {distance, closest} = require('fastest-levenshtein');\n\ntry {\n    // Print levenshtein-distance between 'fast' and 'faster' \n    //msg.payload.distance = distance('fast', 'faster');\n    //=> 2\n\n    // Print string from array with lowest edit-distance to 'fast'\n    //msg.payload.closest = closest('FIESTA TITANIUM', ['FIESTA  1.6 4P S              (KD) (018594)', 'FIESTA  1.6 4P TITANIUM       (KD) (018598)']);\n    \n    var modelos = msg.payload;\n     \n    var searchCriteriaPrincipal = msg.searchCriteria.split(\" \")[0];\n    var searchCriteria = msg.searchCriteria;\n    var preResults = [];\n    var results = [];\n\n    node.warn([\"modelo 1\"]);\n    \n    modelos.forEach(modelo => {\n      if (modelo.descripcion.toLowerCase().includes(searchCriteriaPrincipal.toLowerCase()))\n            preResults.push(modelo);\n    }) \n    \n    node.warn([\"modelo 2\"]);\n    \n    preResults.forEach(modeloFiltered => {\n        let dist = distance(searchCriteria, modeloFiltered.descripcion.replace(/ /g, ''));\n        results.push({dist, modeloFiltered});\n        \n    })\n    \n    node.warn([\"modelo 3\"]);\n    \n    msg.searchCriteriaPrincipal = searchCriteriaPrincipal;\n    msg.preresults = preResults;\n    \n    //Algoritmo para ordenar\n    msg.results = results.sort((a,b) => (a.dist > b.dist) ? 1 : ((b.dist > a.dist) ? -1 : 0));\n\nreturn msg;\n    \n\n}catch (exception) {\n    node.error(\"Error\", exception)\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 640,
        "wires": [
            [
                "f90bbab4.8648b8"
            ]
        ]
    },
    {
        "id": "777e7ab9.a18114",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "response",
        "func": "var year = msg.year;\n\nif (msg.payload.code === 404) {\n    msg.payload = msg.payload.message\n} else {\n    var info ={\n        \"numeroCotizacion\" : msg.payload.numeroCotizacion,\n        \"sumaAsegurada\" : msg.payload.bienesCotizados[0].sumaAsegurada,\n        \"planes\" : []\n};\n    // pusheo los planes que corresponden segun la antiguedad\n    if (year >= 2011 && year <= 2021){\n        info.planes.push(msg.payload.planes[2])\n        info.planes.push(msg.payload.planes[10])\n        info.planes.push(msg.payload.planes[12])\n        \n    } else if (year >= 2007 && year <= 2010 ) {\n         info.planes.push(msg.payload.planes[0])\n         info.planes.push(msg.payload.planes[1])\n         info.planes.push(msg.payload.planes[2])\n    } else if (year >= 2001 && year <=2006){\n        msg.payload.planes.forEach(plan =>{\n            info.planes.push(plan)\n        })\n    } else if (year <=2000 ) {\n         info.planes.push(\"No contamos con planes disponibles para la antigüedad de su vehículo\")\n    } else {\n        info.planes.push(\"sorry, something went grong\")\n    }\n    \n    info.disclaimer = \"La información que otorgo en virtud de la presente operacion informatica, implica la prestacion del consentimiento o dispuesto por la ley 25.326. Conozco que podrá ejercer los derechos de acceso, rectificación y supresión de datos y acepto que la información que otorgo podrá ser utilizada para acciones de marketing en forma directa o a través de terceros. La información sera archivada por Provincia Seguros SA con domicilio en Carlos Pellegrini 71 Ciudad Autónoma de Buenos Aires\";\n    info.terms = \"Pólizas emitidas por Provincia Seguros SA consulta por las coberturas, sus limites y condiciones de suscripción en www.provinciaseguros.com.ar, Provincia Seguros SA, Carlos Pellegrini 71, CABA, CUIT 30-52750816-5, Superintendencia de Seguros de la Nacion www.ssn.gob.ar 0800-666-8400 - N° de inscripción SSN:499\";\n    \n    msg.payload = info \n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 1200,
        "wires": [
            [
                "5a1325f8.9dc51c",
                "d7a989ad.2106c8"
            ]
        ]
    },
    {
        "id": "e22c6966.0c6c78",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "policies",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 2320,
        "wires": [
            [
                "c5d1cec7.bc8ca"
            ]
        ]
    },
    {
        "id": "6572d34e.a7228c",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros IVR",
        "func": "\nlet documentNumber =  msg.payload.document;\nlet policyNumber =  msg.payload.policyNumber || \"\";\n\nmsg.url = global.get(\"psegurosNovedades_Url\") + `executeDataIVR/${documentNumber}/IVR/${policyNumber}?apiKey=` + global.get(\"psegurosApiKey\");\n\n//msg.url = `https://apimt.provinciaseguros.com.ar/gateway/PS/PS-NOVEDADES/3.0/executeDataIVR/${documento}/IVR/${policy}?apiKey=9cc893f8-c119-4eeb-8d68-a3d305927fed`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 2460,
        "wires": [
            [
                "b8569a93.019928",
                "933b4555.345a68"
            ]
        ]
    },
    {
        "id": "53534f2b.1672c",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1210,
        "y": 2460,
        "wires": []
    },
    {
        "id": "256ebbeb.6c7f14",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Policies IVR Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 2360,
        "wires": []
    },
    {
        "id": "b8569a93.019928",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros IVR",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 700,
        "y": 2460,
        "wires": [
            [
                "256ebbeb.6c7f14",
                "4539cac6.a0aa64"
            ]
        ]
    },
    {
        "id": "d0e74ef4.b0846",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Cotizacion - Respuesta Servicio",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5a1325f8.9dc51c",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Cotizacion - Info para Cliente",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1080,
        "wires": []
    },
    {
        "id": "4539cac6.a0aa64",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "response",
        "func": "let policiesAndMenssage = {}\n\n\nif ( msg.payload.data.Polizas === undefined ){\n    policiesAndMenssage = msg.payload.data.Mensaje\n}else if ( msg.payload.data.Polizas.length >= 1 ){\n    policiesAndMenssage = msg.payload.data\n}else {\n    policiesAndMenssage = msg.payload.data\n}\n\n\n\n \n\n\nmsg.payload = policiesAndMenssage;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 2460,
        "wires": [
            [
                "53534f2b.1672c",
                "38162b28.1e2a74"
            ]
        ]
    },
    {
        "id": "4a21ff30.78cab",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "inspection/",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 2000,
        "wires": [
            [
                "3bea474a.346988",
                "36cc2d19.eb9782"
            ]
        ]
    },
    {
        "id": "8fe61422.c12f48",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros Inspeccion",
        "func": "//msg.url = \"https://apimt.provinciaseguros.com.ar/gateway/PS/PS-INSPECCION/2.0/solicitarIpConCotizacion?apikey=9cc893f8-c119-4eeb-8d68-a3d305927fed\";\nmsg.url = global.get(\"psegurosInspeccion_Url\") + `solicitarIpConCotizacion?apikey=` + global.get(\"psegurosApiKey\");\n\nlet bodyQuery = {};\n\nbodyQuery.nroCotizacion = msg.payload.quotation;\nbodyQuery.patente = msg.payload.licencePlate;\nbodyQuery.productorEmail = msg.payload.brokerEmail;\nbodyQuery.apellidoCliente = msg.payload.clientLastName;\nbodyQuery.nombreCliente = msg.payload.clientName;\nbodyQuery.telefonoCliente =  \"\";\nbodyQuery.celularCliente =  msg.payload.clientPhone;\nbodyQuery.emailCliente = msg.payload.clientEmail;\n\nmsg.payload = bodyQuery;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 2100,
        "wires": [
            [
                "a6e8b3bb.9ef56",
                "dd96a3bc.5c619"
            ]
        ]
    },
    {
        "id": "a24b04cf.76cef8",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 2060,
        "wires": []
    },
    {
        "id": "d90165e9.7fc688",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1980,
        "wires": []
    },
    {
        "id": "a6e8b3bb.9ef56",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros Inspeccion",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 780,
        "y": 2060,
        "wires": [
            [
                "d90165e9.7fc688",
                "13bf90d9.99330f"
            ]
        ]
    },
    {
        "id": "13bf90d9.99330f",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "if (msg.statusCode == 200){\n let mensaje = \"Hemos enviado un email con las instruciones para la inspeccion digital\";\n msg.payload = mensaje;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 2060,
        "wires": [
            [
                "a24b04cf.76cef8"
            ]
        ]
    },
    {
        "id": "38162b28.1e2a74",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Policies IVR Client Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 2380,
        "wires": []
    },
    {
        "id": "dd96a3bc.5c619",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1940,
        "wires": []
    },
    {
        "id": "3bea474a.346988",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 1940,
        "wires": []
    },
    {
        "id": "bf1e0de8.73f14",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Quote IN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1060,
        "wires": []
    },
    {
        "id": "20563a9.227f9c6",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/emision",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1700,
        "wires": [
            [
                "e1ca547c.50aa78"
            ]
        ]
    },
    {
        "id": "813504a.1ee2af8",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Emision",
        "func": "//msg.url =  `https://apimt.provinciaseguros.com.ar/gateway/PS/PS-EMISION/1.1/emitir?apikey=9cc893f8-c119-4eeb-8d68-a3d305927fed`;\nmsg.url = global.get(\"psegurosEmision_Url\") + `emitir?apikey=` + global.get(\"psegurosApiKey\");\n\nlet quotation = msg.payload.quotation;\nlet plan = msg.payload.plan;\n\nlet document = msg.payload.document;\nlet name = msg.payload.name.toUpperCase();\nlet lastName = msg.payload.lastName.toUpperCase();\nlet gender = msg.payload.gender.toUpperCase();\nlet birthDate = msg.payload.birthDate;\nlet birthPlace = msg.payload.birthPlace;\nlet civilStatus = msg.payload.civilStatus.toUpperCase();\nlet zipCode = msg.payload.zipCode;\nlet state = msg.payload.state;\nlet location = msg.payload.locacion;\nlet street = msg.payload.street.toUpperCase();\nlet streetNumber = msg.payload.streetNumber;\nlet floor = msg.payload.floor;\nlet departament = msg.payload.departament;\nlet phone = msg.payload.phone;\nlet email = msg.payload.email;\nlet creditCard = msg.payload.creditCard;\n\nlet licencePlate = msg.payload.licencePlate;\nlet chasis = msg.payload.chasis;\nlet motor = msg.payload.motor;\n\nlet bodyEmision = {};\n\nbodyEmision.cotizacion = quotation;\nbodyEmision.plan = plan;\nbodyEmision.promocion = \"CLIFIN\";\nbodyEmision.medioDePago  = \"2\";\nbodyEmision.origenDePago  = \"VISO\";\n\nbodyEmision.datosTomador = {};\nbodyEmision.datosTomador.tipoDocumento = \"DNI\";\nbodyEmision.datosTomador.documento = document;\nbodyEmision.datosTomador.cuitCuil = \"\";\nbodyEmision.datosTomador.apellido = lastName;\nbodyEmision.datosTomador.nombre = name\nbodyEmision.datosTomador.genero = gender;\nbodyEmision.datosTomador.fechaNacimiento = birthDate;\nbodyEmision.datosTomador.pais = \"2\";\nbodyEmision.datosTomador.lugarNacimiento = birthPlace;\nbodyEmision.datosTomador.estadoCivil = civilStatus;\nbodyEmision.datosTomador.profesion = \"100\";\nbodyEmision.datosTomador.expuestoPoliticamente = \"N\";\nbodyEmision.datosTomador.sujetoObligadoArt230 = \"N\";\nbodyEmision.datosTomador.observaciones = \"\";\nbodyEmision.datosTomador.codigoPostal = zipCode;\nbodyEmision.datosTomador.provincia = state;\nbodyEmision.datosTomador.localidad = location;\nbodyEmision.datosTomador.calle = street;\nbodyEmision.datosTomador.numero = streetNumber;\nbodyEmision.datosTomador.piso = floor;\nbodyEmision.datosTomador.departamento = departament;\nbodyEmision.datosTomador.telefono = phone;\nbodyEmision.datosTomador.email = email;\nbodyEmision.datosTomador.datosBancarios = creditCard;\n\n//\"4509953566233704\"\n\nbodyEmision.bien = {};\nbodyEmision.bien['40023_patente'] = licencePlate;\nbodyEmision.bien['40004_numeroChasis'] = chasis;\nbodyEmision.bien['40005_numeroMotor'] = motor;\nbodyEmision.bien['40080_acreditaDominio'] = \"N\";\nbodyEmision.bien['40210_poseeEquipoGas'] = \"N\";\nbodyEmision.bien['40006_numeroReguladorGNC'] = \"\";\nbodyEmision.bien['40010_alcance'] = \"I\";\nbodyEmision.bien['40009_jurisdiccion'] = \"JN\";\nbodyEmision.bien['40011_tipoServicio'] = \"EJ\";\nbodyEmision.bien['40115_nroInscripcionAseguradoRuta'] = \"\";\nbodyEmision.bien['40084_grupoAfinidad'] = \"20\";\nbodyEmision.bien['16015_fechaNacDDmmaaaa'] = \"01051980\";\n\n\nbodyEmision.accesorios = [];\nbodyEmision.textos = [];\n\n\nmsg.payload = bodyEmision;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 1820,
        "wires": [
            [
                "acd09e8a.37169",
                "7b57d586.88fdbc"
            ]
        ]
    },
    {
        "id": "acd09e8a.37169",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 710,
        "y": 1820,
        "wires": [
            [
                "1e56fd9d.d8ff22",
                "148c34fb.33d3ab"
            ]
        ]
    },
    {
        "id": "d38f3260.929eb",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 1820,
        "wires": []
    },
    {
        "id": "1e56fd9d.d8ff22",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "//Nothing to do\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 1820,
        "wires": [
            [
                "d38f3260.929eb"
            ]
        ]
    },
    {
        "id": "148c34fb.33d3ab",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1720,
        "wires": []
    },
    {
        "id": "7b57d586.88fdbc",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 1700,
        "wires": []
    },
    {
        "id": "8c8d5833.ae7498",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "state/:stateName",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 820,
        "wires": [
            [
                "1b6d59cc.a4d2f6",
                "4074fba5.fca764"
            ]
        ]
    },
    {
        "id": "31d16c73.9959c4",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Provincias",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 620,
        "y": 940,
        "wires": [
            [
                "c4225049.00645",
                "77ec4d3c.2612d4"
            ]
        ]
    },
    {
        "id": "cf5c6ae4.30a398",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 940,
        "wires": []
    },
    {
        "id": "1b6d59cc.a4d2f6",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 800,
        "wires": []
    },
    {
        "id": "77ec4d3c.2612d4",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 800,
        "wires": []
    },
    {
        "id": "97ac2e22.87d",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Provincias",
        "func": "//Primero guardo marca que busco\nmsg.searchCriteria = msg.req.params.stateName; \n\n//msg.url = \"https://apimt.provinciaseguros.com.ar/gateway/PS/PS-COTIZACION/2.2/datosGenerales/provincias/4/04100?apikey=9cc893f8-c119-4eeb-8d68-a3d305927fed\";\nmsg.url = global.get(\"psegurosCotizacion_Url\") + `datosGenerales/provincias/4/04100?apikey=` + global.get(\"psegurosApiKey\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 940,
        "wires": [
            [
                "31d16c73.9959c4"
            ]
        ]
    },
    {
        "id": "c4225049.00645",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "response",
        "func": "let states = msg.payload\nvar searchCriteria = msg.searchCriteria;\nvar result = [];\n\nstates.forEach(state => {\n  if (state.descripcion.toLowerCase().includes(searchCriteria.toLowerCase()))\n        result.push(state);\n}) \n\n\nmsg.payload = result\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 940,
        "wires": [
            [
                "cf5c6ae4.30a398",
                "36b1f2e1.294b3e"
            ]
        ]
    },
    {
        "id": "9851dcc3.f8356",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/quotationInfo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 2580,
        "wires": [
            [
                "8aacdae.daa4628"
            ]
        ]
    },
    {
        "id": "2097540b.c944ec",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 730,
        "y": 2680,
        "wires": [
            [
                "6ace3d17.8c65e4"
            ]
        ]
    },
    {
        "id": "b5a56a51.4a6478",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1210,
        "y": 2680,
        "wires": []
    },
    {
        "id": "5342c60e.c1b318",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PS Info Cotizacion",
        "func": "\nlet quotation = msg.payload.quotation\n\n//msg.url =  `https://apimt.provinciaseguros.com.ar/gateway/PS/PS-NOVEDADES/3.0/infoCotizacion/${nmoQuotation}?apikey=9cc893f8-c119-4eeb-8d68-a3d305927fed`;\n\nmsg.url = global.get(\"psegurosNovedades_Url\") + `infoCotizacion/${quotation}?apiKey=` + global.get(\"psegurosApiKey\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 2680,
        "wires": [
            [
                "2097540b.c944ec"
            ]
        ]
    },
    {
        "id": "6ace3d17.8c65e4",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "let response = JSON.parse(msg.payload);\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 2680,
        "wires": [
            [
                "b5a56a51.4a6478"
            ]
        ]
    },
    {
        "id": "f7566786.12b7a8",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/policyPdf",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 2800,
        "wires": [
            [
                "79ff224d.84637c"
            ]
        ]
    },
    {
        "id": "fea396f8.f7ce18",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 730,
        "y": 2880,
        "wires": [
            [
                "3528872b.93cb08",
                "bac50ef5.1d45e"
            ]
        ]
    },
    {
        "id": "2693165f.a734aa",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 2840,
        "wires": []
    },
    {
        "id": "86dfb8be.57c858",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PS Poliza en PDF",
        "func": "let policy =  msg.payload.policy\n\n\n/*al usar el numero de cotizacion en la url pasa a ser string y es\n necesario que valla en el payload como numero para que\n el servicio de provincia no de error\n*/\n \nNumber(policy)\n\n//msg.url =  `https://apimt.provinciaseguros.com.ar/gateway/PS/PS-NOVEDADES/3.0/obtenerPdf/1/4/${policy}/0?apiKey=9cc893f8-c119-4eeb-8d68-a3d305927fed`;\nmsg.url = global.get(\"psegurosNovedades_Url\") + `obtenerPdf/1/4/${policy}/0?apiKey=` + global.get(\"psegurosApiKey\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 2880,
        "wires": [
            [
                "fea396f8.f7ce18",
                "6c884f54.5fd49"
            ]
        ]
    },
    {
        "id": "3528872b.93cb08",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "//  en caso de no haber error devuelve la poliza \n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 2880,
        "wires": [
            [
                "2693165f.a734aa"
            ]
        ]
    },
    {
        "id": "6c884f54.5fd49",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Policy PDF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 2800,
        "wires": []
    },
    {
        "id": "4e99bb05.57faf4",
        "type": "http in",
        "z": "c289f04a.5490c",
        "name": "",
        "url": "/client/:document",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "29293e6c.f68602",
                "25e8a4c0.f8c01c"
            ]
        ]
    },
    {
        "id": "29293e6c.f68602",
        "type": "function",
        "z": "c289f04a.5490c",
        "name": "",
        "func": "var document = msg.req.params.document;\n\n//TODO: Servicio de provincia\nif (document == \"29129613\")\n{\n    msg.payload.clientId = 12345678;\n    msg.payload.insurances = [];\n    \n    var insurance = {};\n    insurance.code = 5123123;\n    insurance.ramo = 4;\n    insurance.address = \"Sarachaga 4956, CABA, Argentina\";\n    insurance.payMethod = \"Credit Card\";\n    \n    msg.payload.insurances.push(insurance);\n    \n    msg.statusCode = 200;\n} else {\n    msg.statusCode = 404;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "74b3a226.91758c"
            ]
        ]
    },
    {
        "id": "74b3a226.91758c",
        "type": "http response",
        "z": "c289f04a.5490c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 660,
        "y": 120,
        "wires": []
    },
    {
        "id": "e2e1e37f.13c1e",
        "type": "http in",
        "z": "c289f04a.5490c",
        "name": "",
        "url": "/insurances/:clientId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "10bb210e.c19b5f"
            ]
        ]
    },
    {
        "id": "10bb210e.c19b5f",
        "type": "function",
        "z": "c289f04a.5490c",
        "name": "",
        "func": "var clientId = msg.req.params[\"clientId\"];\n\n//TODO: Servicio de provincia\n\nmsg.payload.clientId = 12345678;\nmsg.payload.insurances = [];\n\nvar today = new Date();\nvar nextweek = new Date();\nnextweek.setDate(today.getDate()+7);\n\nvar insurance = {};\ninsurance.code = 5123123;\ninsurance.ramo = 4;\ninsurance.address = \"Sarachaga 4956, CABA, Argentina\";\ninsurance.payMethod = \"Credit Card\";\ninsurance.nextPayment = nextweek;\n\nmsg.payload.insurances.push(insurance);\n\nvar insurance2 = {};\ninsurance2.code = 98734123;\ninsurance2.ramo = 8;\ninsurance2.address = \"Sarachaga 4956, CABA, Argentina\";\ninsurance2.payMethod = \"Credit Card\";\ninsurance2.nextPayment = nextweek;\n\nmsg.payload.insurances.push(insurance2);\n\nmsg.statusCode = 200;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 240,
        "wires": [
            [
                "555cf34e.b7332c"
            ]
        ]
    },
    {
        "id": "555cf34e.b7332c",
        "type": "http response",
        "z": "c289f04a.5490c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "25e8a4c0.f8c01c",
        "type": "debug",
        "z": "c289f04a.5490c",
        "name": "getClient",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 60,
        "wires": []
    },
    {
        "id": "7a106859.2c1a38",
        "type": "inject",
        "z": "60e059d3.b0f6b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "1c8d1f43.e18391"
            ]
        ]
    },
    {
        "id": "1c8d1f43.e18391",
        "type": "change",
        "z": "60e059d3.b0f6b8",
        "name": "Setear valores globales",
        "rules": [
            {
                "t": "set",
                "p": "psegurosAuth_Url",
                "pt": "global",
                "to": "https://autht.provinciaseguros.com.ar/auth/realms/ps/protocol/openid-connect/token",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "psegurosAuth_GrantType",
                "pt": "global",
                "to": "password",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "psegurosAuth_UserName",
                "pt": "global",
                "to": "petrilloa@pseguros.com.ar",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "psegurosAuth_Password",
                "pt": "global",
                "to": "andres123",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "psegurosAuth_Client_Secret",
                "pt": "global",
                "to": "d5cd926e-3f94-48df-9c4a-2f3d7b9381d1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "psegurosAuth_Client_Id",
                "pt": "global",
                "to": "ps2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "psegurosApiKey",
                "pt": "global",
                "to": "9cc893f8-c119-4eeb-8d68-a3d305927fed",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "psegurosCotizacion_Url",
                "pt": "global",
                "to": "https://apimt.provinciaseguros.com.ar/gateway/PS/PS-COTIZACION/2.2/",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "psegurosEmision_Url",
                "pt": "global",
                "to": "https://apimt.provinciaseguros.com.ar/gateway/PS/PS-EMISION/1.1/",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "psegurosInspeccion_Url",
                "pt": "global",
                "to": "https://apimt.provinciaseguros.com.ar/gateway/PS/PS-INSPECCION/2.0/",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "psegurosNovedades_Url",
                "pt": "global",
                "to": "https://apimt.provinciaseguros.com.ar/gateway/PS/PS-NOVEDADES/3.0/",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9033dc41.2abdd",
        "type": "comment",
        "z": "60e059d3.b0f6b8",
        "name": "PSeguros TEST",
        "info": "Setear valores de configuracion por Entorno\nPSeguros TEST",
        "x": 320,
        "y": 40,
        "wires": []
    },
    {
        "id": "53aa28bc.29bf98",
        "type": "function",
        "z": "248b9587.09adfa",
        "name": "PSeguros Token",
        "func": "//Servicio para obtener Token de Pseguros\n\nmsg.headers={ \n    'Content-Type': 'application/x-www-form-urlencoded'\n};\n\n//Guardar peticion inicial\nmsg.originalPayload = msg.payload;\n\nmsg.url = global.get(\"psegurosAuth_Url\");\n\nlet formAccess = {}\n\nformAccess={\n    'grant_type' :  global.get(\"psegurosAuth_GrantType\"),\n    'username' : global.get(\"psegurosAuth_UserName\"),\n    'password' : global.get(\"psegurosAuth_Password\"),\n    'client_secret' : global.get(\"psegurosAuth_Client_Secret\"),\n    'client_id' : global.get(\"psegurosAuth_Client_Id\"),\n};\n\nmsg.payload = formAccess\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 287,
        "wires": [
            [
                "339e8769.8a9f38"
            ]
        ]
    },
    {
        "id": "d46bf2e7.98806",
        "type": "debug",
        "z": "248b9587.09adfa",
        "name": "PSeguros Auth - Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 380,
        "wires": []
    },
    {
        "id": "339e8769.8a9f38",
        "type": "http request",
        "z": "248b9587.09adfa",
        "name": "PSeguros - Token",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 930,
        "y": 280,
        "wires": [
            [
                "e952cbad.53cbd8"
            ]
        ]
    },
    {
        "id": "abd6fb81.40c6e8",
        "type": "debug",
        "z": "248b9587.09adfa",
        "name": "PSeguros Auth - Function",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 380,
        "wires": []
    },
    {
        "id": "e952cbad.53cbd8",
        "type": "function",
        "z": "248b9587.09adfa",
        "name": "Get token",
        "func": "//Obtener accesstoken\nlet authToken = JSON.parse(msg.payload)\n\n//Seteo credenciales en la cabecera\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + authToken.access_token;\n\nmsg.payload = msg.originalPayload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "7c91ca0f.0ff924",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 280,
        "y": 160,
        "wires": [
            [
                "836bf80b.747198"
            ]
        ]
    },
    {
        "id": "ef867495.5b0568",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - brands - Response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 180,
        "wires": []
    },
    {
        "id": "1e69d6bf.aefc39",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - brands - Request",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 320,
        "wires": []
    },
    {
        "id": "8ef60da5.20b09",
        "type": "function-npm",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "const {distance, closest} = require('fastest-levenshtein');\n\ntry {\n    \n    var marcas = msg.payload;\n    var searchCriteria = msg.searchCriteria;\n    var preResults = [];\n    var results = [];\n    \n    marcas.forEach(marca => {\n      if (marca.descripcion.toLowerCase().includes(searchCriteria))\n            preResults.push(marca);\n    }) \n    \n    preResults.forEach(brandFiltered => {\n        let dist = distance(searchCriteria, brandFiltered.descripcion.replace(/ /g, ''));\n        results.push({dist, brandFiltered});\n        //flatened.push(modelo.descripcion.replace(/ /g, ''));\n    })\n    \n    msg.preresults = preResults;\n    \n    //Algoritmo para ordenar\n    msg.results = results.sort((a,b) => (a.dist > b.dist) ? 1 : ((b.dist > a.dist) ? -1 : 0));\n    \n\n}catch (exception) {\n    node.error(\"Error\", exception)\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 240,
        "wires": [
            [
                "b32cf65f.ced7b8",
                "af4b0342.00155"
            ]
        ]
    },
    {
        "id": "e9b1bab8.be9688",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 280,
        "y": 560,
        "wires": [
            [
                "d5f623bc.09378"
            ]
        ]
    },
    {
        "id": "4074fba5.fca764",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 240,
        "y": 880,
        "wires": [
            [
                "97ac2e22.87d"
            ]
        ]
    },
    {
        "id": "32ed8f25.6e21a",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 240,
        "y": 1140,
        "wires": [
            [
                "8d1f8743.53ca18"
            ]
        ]
    },
    {
        "id": "36b1f2e1.294b3e",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "States OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 840,
        "wires": []
    },
    {
        "id": "62a79754.343008",
        "type": "inject",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 510,
        "y": 1460,
        "wires": [
            [
                "aac3000e.0ca9c"
            ]
        ]
    },
    {
        "id": "918fc464.6531a8",
        "type": "jimp-image",
        "z": "7ee549ef.0fbb28",
        "name": "Get template",
        "data": "image.url",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "image.font",
        "parameter1Type": "msg",
        "parameter2": "image.x",
        "parameter2Type": "msg",
        "parameter3": "image.y",
        "parameter3Type": "msg",
        "parameter4": "image.text",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "image.payload",
        "sendPropertyType": "msg",
        "parameterCount": 6,
        "jimpFunction": "print",
        "selectedJimpFunction": {
            "name": "print",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "maxWidth",
                    "type": "num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 910,
        "y": 1340,
        "wires": [
            [
                "9e035bb2.6d5678",
                "635b1352.d3259c",
                "31047e79.12a852"
            ]
        ]
    },
    {
        "id": "aac3000e.0ca9c",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "Define header",
        "func": "msg.image = {};\n\nmsg.image.url = \"http://rocket.it.mindbot.com.ar:1881/Cotizacion - Promos - Template v1.0.png\";\nmsg.image.font = \"FONT_SANS_14_BLACK\";\nmsg.image.x = 58;\nmsg.image.y = 5;\nmsg.image.text = \"Cotizacion: 456132 - Ford Fiesta Kinect Design 2017 - Suma asegurada: $1.030.000 - 14/2/2021\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 1340,
        "wires": [
            [
                "918fc464.6531a8"
            ]
        ]
    },
    {
        "id": "9e035bb2.6d5678",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "Define footer",
        "func": "msg.image.font = \"FONT_SANS_10_BLACK\";\nmsg.image.x = 20;\nmsg.image.y = 1170;\nmsg.image.text = \"La información que otorgo en virtud de la presente operacion informatica, implica la prestacion del consentimiento o dispuesto por la ley 25.326. Conozco que podrá ejercer los derechos de acceso, rectificación y supresión de datos y acepto que la información que otorgo podrá ser utilizada para acciones de marketing en forma directa o a través de terceros. La información sera archivada por Provincia Seguros SA con domicilio en Carlos Pellegrini 71 Ciudad Autónoma de Buenos Aires\";\nmsg.image.maxWidth = 720;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1130,
        "y": 1340,
        "wires": [
            [
                "35195284.f71cee"
            ]
        ]
    },
    {
        "id": "35195284.f71cee",
        "type": "jimp-image",
        "z": "7ee549ef.0fbb28",
        "name": "Get template",
        "data": "image.payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "image.font",
        "parameter1Type": "msg",
        "parameter2": "image.x",
        "parameter2Type": "msg",
        "parameter3": "image.y",
        "parameter3Type": "msg",
        "parameter4": "image.text",
        "parameter4Type": "msg",
        "parameter5": "image.maxWidth",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "image.payload",
        "sendPropertyType": "msg",
        "parameterCount": 6,
        "jimpFunction": "print",
        "selectedJimpFunction": {
            "name": "print",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "maxWidth",
                    "type": "num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 1330,
        "y": 1340,
        "wires": [
            [
                "fcce0faf.bb7ca"
            ]
        ]
    },
    {
        "id": "fcce0faf.bb7ca",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "Promo 1 - valor NOAP",
        "func": "msg.image.font = \"FONT_SANS_32_WHITE\";\nmsg.image.x = 270;\nmsg.image.y = 40;\nmsg.image.text = \"$ 3247 / MES\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1640,
        "y": 1340,
        "wires": [
            [
                "21f3b6e3.a7021a"
            ]
        ]
    },
    {
        "id": "21f3b6e3.a7021a",
        "type": "jimp-image",
        "z": "7ee549ef.0fbb28",
        "name": "Get template",
        "data": "image.payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "image.font",
        "parameter1Type": "msg",
        "parameter2": "image.x",
        "parameter2Type": "msg",
        "parameter3": "image.y",
        "parameter3Type": "msg",
        "parameter4": "image.text",
        "parameter4Type": "msg",
        "parameter5": "image.maxWidth",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "image.payload",
        "sendPropertyType": "msg",
        "parameterCount": 6,
        "jimpFunction": "print",
        "selectedJimpFunction": {
            "name": "print",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "maxWidth",
                    "type": "num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 1910,
        "y": 1340,
        "wires": [
            [
                "53adabcc.aa0604"
            ]
        ]
    },
    {
        "id": "53adabcc.aa0604",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "Promo 1 - valor PROMO",
        "func": "msg.image.font = \"FONT_SANS_64_WHITE\";\nmsg.image.x = 190;\nmsg.image.y = 115;\nmsg.image.text = \"$ 2292 / MES\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2190,
        "y": 1340,
        "wires": [
            [
                "c59bf735.627708"
            ]
        ]
    },
    {
        "id": "c59bf735.627708",
        "type": "jimp-image",
        "z": "7ee549ef.0fbb28",
        "name": "Get template",
        "data": "image.payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "image.font",
        "parameter1Type": "msg",
        "parameter2": "image.x",
        "parameter2Type": "msg",
        "parameter3": "image.y",
        "parameter3Type": "msg",
        "parameter4": "image.text",
        "parameter4Type": "msg",
        "parameter5": "image.maxWidth",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "image.payload",
        "sendPropertyType": "msg",
        "parameterCount": 6,
        "jimpFunction": "print",
        "selectedJimpFunction": {
            "name": "print",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "maxWidth",
                    "type": "num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 2430,
        "y": 1340,
        "wires": [
            [
                "ead7db84.993d08"
            ]
        ]
    },
    {
        "id": "ead7db84.993d08",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "Promo 1 - Producto",
        "func": "msg.image.font = \"FONT_SANS_16_WHITE\";\nmsg.image.x = 250;\nmsg.image.y = 180;\nmsg.image.text = \"TODO RIESGO GARANTIZADO ECONOMICO\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2770,
        "y": 1340,
        "wires": [
            [
                "fe72ba3b.109968"
            ]
        ]
    },
    {
        "id": "fe72ba3b.109968",
        "type": "jimp-image",
        "z": "7ee549ef.0fbb28",
        "name": "Get template",
        "data": "image.payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "image.font",
        "parameter1Type": "msg",
        "parameter2": "image.x",
        "parameter2Type": "msg",
        "parameter3": "image.y",
        "parameter3Type": "msg",
        "parameter4": "image.text",
        "parameter4Type": "msg",
        "parameter5": "HORIZONTAL_ALIGN_CENTER",
        "parameter5Type": "AlignX",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "250",
        "parameter7Type": "num",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 8,
        "jimpFunction": "print2",
        "selectedJimpFunction": {
            "name": "print aligned",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "group": "options",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "alignmentX",
                    "group": "options",
                    "type": "AlignX",
                    "required": false,
                    "hint": "X Alignment"
                },
                {
                    "name": "alignmentY",
                    "group": "options",
                    "type": "AlignY",
                    "required": false,
                    "hint": "Y Alignment"
                },
                {
                    "name": "maxWidth",
                    "type": "auto|num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "auto|num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 3030,
        "y": 1340,
        "wires": [
            [
                "3a08c45e.21564c",
                "c13be3c5.cfa1e",
                "26eb048a.5f1e3c"
            ]
        ]
    },
    {
        "id": "3a08c45e.21564c",
        "type": "image viewer",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "width": "400",
        "data": "payload",
        "dataType": "msg",
        "x": 3150,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "635b1352.d3259c",
        "type": "image viewer",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "width": "400",
        "data": "image.payload",
        "dataType": "msg",
        "x": 1030,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "31047e79.12a852",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Header",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 1280,
        "wires": []
    },
    {
        "id": "26eb048a.5f1e3c",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Quotes + Image",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3370,
        "y": 1160,
        "wires": []
    },
    {
        "id": "cb14006.fed6f",
        "type": "http response",
        "z": "351b2b12.3dfcd4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 3810,
        "y": 640,
        "wires": []
    },
    {
        "id": "d811a2f8.07d49",
        "type": "inject",
        "z": "351b2b12.3dfcd4",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1070,
        "y": 640,
        "wires": [
            [
                "18176402.4431fc"
            ]
        ]
    },
    {
        "id": "c0a8ee28.50248",
        "type": "jimp-image",
        "z": "351b2b12.3dfcd4",
        "name": "Get template",
        "data": "image.url",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "image.font",
        "parameter1Type": "msg",
        "parameter2": "image.x",
        "parameter2Type": "msg",
        "parameter3": "image.y",
        "parameter3Type": "msg",
        "parameter4": "image.text",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "image.payload",
        "sendPropertyType": "msg",
        "parameterCount": 6,
        "jimpFunction": "print",
        "selectedJimpFunction": {
            "name": "print",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "maxWidth",
                    "type": "num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 1450,
        "y": 640,
        "wires": [
            [
                "b17554d3.e3efe8",
                "606d1246.82476c",
                "7d436de.520c794"
            ]
        ]
    },
    {
        "id": "18176402.4431fc",
        "type": "function",
        "z": "351b2b12.3dfcd4",
        "name": "Define header",
        "func": "msg.image = {};\n\nmsg.image.url = \"http://rocket.it.mindbot.com.ar:1881/Cotizacion - Promos - Template v1.0.png\";\nmsg.image.font = \"FONT_SANS_14_BLACK\";\nmsg.image.x = 58;\nmsg.image.y = 5;\nmsg.image.text = \"Cotizacion: 456132 - Ford Fiesta Kinect Design 2017 - Suma asegurada: $1.030.000 - 14/2/2021\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1240,
        "y": 640,
        "wires": [
            [
                "c0a8ee28.50248"
            ]
        ]
    },
    {
        "id": "b17554d3.e3efe8",
        "type": "function",
        "z": "351b2b12.3dfcd4",
        "name": "Define footer",
        "func": "msg.image.font = \"FONT_SANS_10_BLACK\";\nmsg.image.x = 20;\nmsg.image.y = 1170;\nmsg.image.text = \"La información que otorgo en virtud de la presente operacion informatica, implica la prestacion del consentimiento o dispuesto por la ley 25.326. Conozco que podrá ejercer los derechos de acceso, rectificación y supresión de datos y acepto que la información que otorgo podrá ser utilizada para acciones de marketing en forma directa o a través de terceros. La información sera archivada por Provincia Seguros SA con domicilio en Carlos Pellegrini 71 Ciudad Autónoma de Buenos Aires\";\nmsg.image.maxWidth = 720;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1670,
        "y": 640,
        "wires": [
            [
                "3fd8cb2e.3585f4"
            ]
        ]
    },
    {
        "id": "3fd8cb2e.3585f4",
        "type": "jimp-image",
        "z": "351b2b12.3dfcd4",
        "name": "Get template",
        "data": "image.payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "image.font",
        "parameter1Type": "msg",
        "parameter2": "image.x",
        "parameter2Type": "msg",
        "parameter3": "image.y",
        "parameter3Type": "msg",
        "parameter4": "image.text",
        "parameter4Type": "msg",
        "parameter5": "image.maxWidth",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "image.payload",
        "sendPropertyType": "msg",
        "parameterCount": 6,
        "jimpFunction": "print",
        "selectedJimpFunction": {
            "name": "print",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "maxWidth",
                    "type": "num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 1870,
        "y": 640,
        "wires": [
            [
                "7032f5fd.ce27bc"
            ]
        ]
    },
    {
        "id": "7032f5fd.ce27bc",
        "type": "function",
        "z": "351b2b12.3dfcd4",
        "name": "Promo 1 - valor NOAP",
        "func": "msg.image.font = \"FONT_SANS_32_WHITE\";\nmsg.image.x = 270;\nmsg.image.y = 40;\nmsg.image.text = \"$ 3247 / MES\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2180,
        "y": 640,
        "wires": [
            [
                "b9f34bec.78b258"
            ]
        ]
    },
    {
        "id": "b9f34bec.78b258",
        "type": "jimp-image",
        "z": "351b2b12.3dfcd4",
        "name": "Get template",
        "data": "image.payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "image.font",
        "parameter1Type": "msg",
        "parameter2": "image.x",
        "parameter2Type": "msg",
        "parameter3": "image.y",
        "parameter3Type": "msg",
        "parameter4": "image.text",
        "parameter4Type": "msg",
        "parameter5": "image.maxWidth",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "image.payload",
        "sendPropertyType": "msg",
        "parameterCount": 6,
        "jimpFunction": "print",
        "selectedJimpFunction": {
            "name": "print",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "maxWidth",
                    "type": "num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 2450,
        "y": 640,
        "wires": [
            [
                "2cbafbcb.c98724"
            ]
        ]
    },
    {
        "id": "2cbafbcb.c98724",
        "type": "function",
        "z": "351b2b12.3dfcd4",
        "name": "Promo 1 - valor PROMO",
        "func": "msg.image.font = \"FONT_SANS_64_WHITE\";\nmsg.image.x = 190;\nmsg.image.y = 115;\nmsg.image.text = \"$ 2292 / MES\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 640,
        "wires": [
            [
                "af87f475.ec95f8"
            ]
        ]
    },
    {
        "id": "af87f475.ec95f8",
        "type": "jimp-image",
        "z": "351b2b12.3dfcd4",
        "name": "Get template",
        "data": "image.payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "image.font",
        "parameter1Type": "msg",
        "parameter2": "image.x",
        "parameter2Type": "msg",
        "parameter3": "image.y",
        "parameter3Type": "msg",
        "parameter4": "image.text",
        "parameter4Type": "msg",
        "parameter5": "image.maxWidth",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "image.payload",
        "sendPropertyType": "msg",
        "parameterCount": 6,
        "jimpFunction": "print",
        "selectedJimpFunction": {
            "name": "print",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "maxWidth",
                    "type": "num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 2970,
        "y": 640,
        "wires": [
            [
                "70161de6.e691b4"
            ]
        ]
    },
    {
        "id": "70161de6.e691b4",
        "type": "function",
        "z": "351b2b12.3dfcd4",
        "name": "Promo 1 - Producto",
        "func": "msg.image.font = \"FONT_SANS_16_WHITE\";\nmsg.image.x = 250;\nmsg.image.y = 180;\nmsg.image.text = \"TODO RIESGO GARANTIZADO ECONOMICO\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3310,
        "y": 640,
        "wires": [
            [
                "4b898928.e49548"
            ]
        ]
    },
    {
        "id": "4b898928.e49548",
        "type": "jimp-image",
        "z": "351b2b12.3dfcd4",
        "name": "Get template",
        "data": "image.payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "image.font",
        "parameter1Type": "msg",
        "parameter2": "image.x",
        "parameter2Type": "msg",
        "parameter3": "image.y",
        "parameter3Type": "msg",
        "parameter4": "image.text",
        "parameter4Type": "msg",
        "parameter5": "HORIZONTAL_ALIGN_CENTER",
        "parameter5Type": "AlignX",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "250",
        "parameter7Type": "num",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 8,
        "jimpFunction": "print2",
        "selectedJimpFunction": {
            "name": "print aligned",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "group": "options",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "alignmentX",
                    "group": "options",
                    "type": "AlignX",
                    "required": false,
                    "hint": "X Alignment"
                },
                {
                    "name": "alignmentY",
                    "group": "options",
                    "type": "AlignY",
                    "required": false,
                    "hint": "Y Alignment"
                },
                {
                    "name": "maxWidth",
                    "type": "auto|num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "auto|num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 3570,
        "y": 640,
        "wires": [
            [
                "915e066.0bbcff8",
                "cb14006.fed6f"
            ]
        ]
    },
    {
        "id": "915e066.0bbcff8",
        "type": "image viewer",
        "z": "351b2b12.3dfcd4",
        "name": "",
        "width": "400",
        "data": "payload",
        "dataType": "msg",
        "x": 3430,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "606d1246.82476c",
        "type": "image viewer",
        "z": "351b2b12.3dfcd4",
        "name": "",
        "width": "400",
        "data": "image.payload",
        "dataType": "msg",
        "x": 1570,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "7d436de.520c794",
        "type": "debug",
        "z": "351b2b12.3dfcd4",
        "name": "Header",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 580,
        "wires": []
    },
    {
        "id": "c43bd1bb.08c6a",
        "type": "http in",
        "z": "351b2b12.3dfcd4",
        "name": "",
        "url": "/test-image",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 980,
        "y": 500,
        "wires": [
            [
                "18176402.4431fc"
            ]
        ]
    },
    {
        "id": "d7a989ad.2106c8",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1090,
        "y": 1200,
        "wires": []
    },
    {
        "id": "c61893c2.12e85",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/quotationImage",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 1320,
        "wires": [
            [
                "aac3000e.0ca9c"
            ]
        ]
    },
    {
        "id": "e1ca547c.50aa78",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 220,
        "y": 1780,
        "wires": [
            [
                "813504a.1ee2af8"
            ]
        ]
    },
    {
        "id": "36cc2d19.eb9782",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 260,
        "y": 2060,
        "wires": [
            [
                "8fe61422.c12f48"
            ]
        ]
    },
    {
        "id": "c5d1cec7.bc8ca",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 260,
        "y": 2400,
        "wires": [
            [
                "6572d34e.a7228c"
            ]
        ]
    },
    {
        "id": "933b4555.345a68",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Policies IVR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 2360,
        "wires": []
    },
    {
        "id": "8aacdae.daa4628",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 260,
        "y": 2660,
        "wires": [
            [
                "5342c60e.c1b318"
            ]
        ]
    },
    {
        "id": "79ff224d.84637c",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 260,
        "y": 2880,
        "wires": [
            [
                "86dfb8be.57c858"
            ]
        ]
    },
    {
        "id": "bac50ef5.1d45e",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Policy PDF Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 2800,
        "wires": []
    },
    {
        "id": "8be7f667.b7e4c8",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "nationality/:nationalityName",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 3120,
        "wires": [
            [
                "7461e69d.1aab78",
                "15527054.0c6a9"
            ]
        ]
    },
    {
        "id": "6caed24d.01950c",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Nacionalidades",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 580,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "5688af64.2d693",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 3240,
        "wires": []
    },
    {
        "id": "7461e69d.1aab78",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 3100,
        "wires": []
    },
    {
        "id": "f60b7fa9.ce42f",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 3100,
        "wires": []
    },
    {
        "id": "17d2192c.59b007",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Nationalities",
        "func": "//Primero guardo marca que busco\nmsg.searchCriteria = msg.req.params.nationalityName; \n\n//msg.url = \"https://apimt.provinciaseguros.com.ar/gateway/PS/PS-COTIZACION/2.2/datosGenerales/provincias/4/04100?apikey=9cc893f8-c119-4eeb-8d68-a3d305927fed\";\n//msg.url = global.get(\"psegurosCotizacion_Url\") + `datosGenerales/provincias/4/04100?apikey=` + global.get(\"psegurosApiKey\");\n\n//TODO:!\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 3240,
        "wires": [
            [
                "2b10a996.686f46"
            ]
        ]
    },
    {
        "id": "2b10a996.686f46",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "response",
        "func": "//TODO: TEMPORAL hasta tener servicio\nvar resultTemp = [];\nresultTemp.push({codigo:\"1\", descripcion:\"ARGENTINA\"});\n\nmsg.payload = resultTemp\n\nreturn msg;\n\n//TODO: Reemplazar\n\nlet nationalities = msg.payload\nvar searchCriteria = msg.searchCriteria;\nvar result = [];\n\nnationalities.forEach(nationality => {\n  if (nationality.descripcion.toLowerCase().includes(searchCriteria.toLowerCase()))\n        result.push(nationality);\n}) \n\n\nmsg.payload = result\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 3240,
        "wires": [
            [
                "5688af64.2d693",
                "a6931131.fd1c9"
            ]
        ]
    },
    {
        "id": "15527054.0c6a9",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 200,
        "y": 3180,
        "wires": [
            [
                "17d2192c.59b007"
            ]
        ]
    },
    {
        "id": "a6931131.fd1c9",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Nationalities OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 3140,
        "wires": []
    },
    {
        "id": "c65794d2.f63f18",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "location/:locationName",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 3380,
        "wires": [
            [
                "a0db1b30.fbef68",
                "f0b50084.443aa"
            ]
        ]
    },
    {
        "id": "ec9235f3.484eb8",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Localidades",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 550,
        "y": 3540,
        "wires": [
            []
        ]
    },
    {
        "id": "d40757fd.b1bfa8",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 3500,
        "wires": []
    },
    {
        "id": "a0db1b30.fbef68",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 3360,
        "wires": []
    },
    {
        "id": "82fe31ec.c1909",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 3360,
        "wires": []
    },
    {
        "id": "7ba244c.36851bc",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Nationalities",
        "func": "//Primero guardo marca que busco\nmsg.searchCriteria = msg.req.params.locationName; \n\n//msg.url = \"https://apimt.provinciaseguros.com.ar/gateway/PS/PS-COTIZACION/2.2/datosGenerales/provincias/4/04100?apikey=9cc893f8-c119-4eeb-8d68-a3d305927fed\";\n//msg.url = global.get(\"psegurosCotizacion_Url\") + `datosGenerales/provincias/4/04100?apikey=` + global.get(\"psegurosApiKey\");\n\n//TODO:!\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 3500,
        "wires": [
            [
                "b5150a60.eda5b8"
            ]
        ]
    },
    {
        "id": "b5150a60.eda5b8",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "response",
        "func": "//TODO: TEMPORAL hasta tener servicio\nvar resultTemp = [];\nresultTemp.push({codigo:\"1\", descripcion:\"CABA\"});\n\nmsg.payload = resultTemp\n\nreturn msg;\n\n//TODO: Reemplazar\n\nlet locations = msg.payload\nvar searchCriteria = msg.searchCriteria;\nvar result = [];\n\nlocations.forEach(location => {\n  if (location.descripcion.toLowerCase().includes(searchCriteria.toLowerCase()))\n        result.push(location);\n}) \n\n\nmsg.payload = result\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 3500,
        "wires": [
            [
                "d40757fd.b1bfa8",
                "4f32083.a11def8"
            ]
        ]
    },
    {
        "id": "f0b50084.443aa",
        "type": "subflow:248b9587.09adfa",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "env": [],
        "x": 200,
        "y": 3440,
        "wires": [
            [
                "7ba244c.36851bc"
            ]
        ]
    },
    {
        "id": "4f32083.a11def8",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Nationalities OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 3400,
        "wires": []
    }
]