[
    {
        "id": "7ee81df4.bfea84",
        "type": "tab",
        "label": "Integrations",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7ee549ef.0fbb28",
        "type": "tab",
        "label": "Services - PSeguros",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c0a2e33c.1511f",
        "type": "telegram bot",
        "botname": "PSegurosBot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "3f4b9f1f.e14f1",
        "type": "telegram receiver",
        "z": "7ee81df4.bfea84",
        "name": "",
        "bot": "c0a2e33c.1511f",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 190,
        "y": 220,
        "wires": [
            [
                "93d23625.10d5f8",
                "c0f41767.f57208"
            ],
            []
        ]
    },
    {
        "id": "e78ac438.3320e8",
        "type": "telegram sender",
        "z": "7ee81df4.bfea84",
        "name": "",
        "bot": "c0a2e33c.1511f",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1190,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "93d23625.10d5f8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Telegram receiver",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "63a91f15.a4e6a",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "New visitor",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://rocket.it.mindbot.com.ar/api/v1/livechat/visitor",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1490,
        "y": 360,
        "wires": [
            [
                "51a1093e.9a7ff8",
                "dfed7cc7.c7027"
            ]
        ]
    },
    {
        "id": "79f5db67.0cb104",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Payload",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/visitor#payload\n\n//Obtener datos de Telegram\nlet fullName = msg.originalMessage.from.first_name + \" \" + msg.originalMessage.from.last_name;\n//Usar id de Usuario de Telegram como TOKEN - lo espera en String\nlet token = msg.originalMessage.from.id.toString()\n\nlet visitor = {};\n\nvisitor.name = fullName;\nvisitor.token = token;\nvisitor.customFields = [];\n\n//Custom Field para informar el CANAL\n\nvisitor.customFields.push({key:\"chanel\", value:\"telegram\", overwrite:true});\n\nmsg.payload = {};\nmsg.payload.visitor = visitor;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "74e7208b.04a33",
                "63a91f15.a4e6a"
            ]
        ]
    },
    {
        "id": "74e7208b.04a33",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 300,
        "wires": []
    },
    {
        "id": "c0f41767.f57208",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data Payload",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/visitor#payload\n\n//Usar id de Usuario de Telegram como TOKEN\nlet token = msg.originalMessage.from.id\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/visitor/\" + token;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "22826c11.f10fb4"
            ]
        ]
    },
    {
        "id": "22826c11.f10fb4",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 820,
        "y": 200,
        "wires": [
            [
                "7ab5d913.53ffa8",
                "ea9d6124.d69fd",
                "db404bb5.08c118"
            ]
        ]
    },
    {
        "id": "7ab5d913.53ffa8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 60,
        "wires": []
    },
    {
        "id": "51a1093e.9a7ff8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 300,
        "wires": []
    },
    {
        "id": "d8a93589.9ba8f8",
        "type": "comment",
        "z": "7ee81df4.bfea84",
        "name": "Example response",
        "info": "{\"visitor\":{\"_id\":\"5NeTKRb5YzZ4wE3Mi\",\"username\":\"guest-6\",\"ts\":\"2021-01-19T12:26:32.789Z\",\"ip\":\"192.168.1.1\",\"host\":\"rocket.it.mindbot.com.ar\",\"_updatedAt\":\"2021-01-19T12:26:32.791Z\",\"name\":\"Andres Petrillo\",\"token\":\"869282068\"},\"success\":true}\n\n{\"visitor\":{\"_id\":\"5NeTKRb5YzZ4wE3Mi\",\"username\":\"guest-6\",\"ts\":\"2021-01-19T12:26:32.789Z\",\"ip\":\"192.168.1.1\",\"host\":\"rocket.it.mindbot.com.ar\",\"_updatedAt\":\"2021-01-19T12:26:32.791Z\",\"name\":\"Andres Petrillo\",\"token\":\"869282068\"},\"success\":true}",
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "db404bb5.08c118",
        "type": "switch",
        "z": "7ee81df4.bfea84",
        "name": "Check visitor exists",
        "property": "payload.visitor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "4c4953ed.decb2c",
                "dfed7cc7.c7027"
            ],
            [
                "79f5db67.0cb104",
                "9de6f676.6b1328"
            ]
        ]
    },
    {
        "id": "dfed7cc7.c7027",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get config (Obtengo room)",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\nlet token = msg.originalMessage.from.id\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/config?token=\" + token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1700,
        "y": 200,
        "wires": [
            [
                "506b3875.adacc8"
            ]
        ]
    },
    {
        "id": "506b3875.adacc8",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get config",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1950,
        "y": 200,
        "wires": [
            [
                "4551ea09.6b2dc4"
            ]
        ]
    },
    {
        "id": "ea9d6124.d69fd",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Visitor data to json",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 60,
        "wires": []
    },
    {
        "id": "4551ea09.6b2dc4",
        "type": "json",
        "z": "7ee81df4.bfea84",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2130,
        "y": 200,
        "wires": [
            [
                "bfe45ba3.557ce8",
                "3e8ca4e8.4b9dfc"
            ]
        ]
    },
    {
        "id": "bfe45ba3.557ce8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "to json",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2430,
        "y": 60,
        "wires": []
    },
    {
        "id": "2af94aa3.5b5f46",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\n\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/message\"\n\nlet originalPayload = msg.payload;\n\nmsg.payload = {};\nmsg.payload.token = originalPayload.config.guest.token;\nmsg.payload.rid = originalPayload.config.room._id;\nmsg.payload.msg = msg.originalMessage.text;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2660,
        "y": 200,
        "wires": [
            [
                "fd8c9753.82cf18"
            ]
        ]
    },
    {
        "id": "f60f6e8b.26885",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3080,
        "y": 60,
        "wires": []
    },
    {
        "id": "4c4953ed.decb2c",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "visitor EXISTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 140,
        "wires": []
    },
    {
        "id": "9de6f676.6b1328",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "visitor NOT EXISTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 420,
        "wires": []
    },
    {
        "id": "3e8ca4e8.4b9dfc",
        "type": "switch",
        "z": "7ee81df4.bfea84",
        "name": "Check room exists",
        "property": "payload.config.room",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2350,
        "y": 200,
        "wires": [
            [
                "2af94aa3.5b5f46"
            ],
            [
                "98c2632b.e833a"
            ]
        ]
    },
    {
        "id": "98c2632b.e833a",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get room (crear room)",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\nlet token = msg.originalMessage.from.id\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/room?token=\" + token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2380,
        "y": 320,
        "wires": [
            [
                "414289d5.96b3b8"
            ]
        ]
    },
    {
        "id": "414289d5.96b3b8",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get room",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2620,
        "y": 320,
        "wires": [
            [
                "1fab54c.98015ab"
            ]
        ]
    },
    {
        "id": "1fab54c.98015ab",
        "type": "json",
        "z": "7ee81df4.bfea84",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2810,
        "y": 320,
        "wires": [
            [
                "beeafc04.2066e"
            ]
        ]
    },
    {
        "id": "beeafc04.2066e",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\n\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/message\"\n\nlet originalPayload = msg.payload;\n\nmsg.payload = {};\nmsg.payload.token = originalPayload.room.v.token;\nmsg.payload.rid = originalPayload.room._id;\nmsg.payload.msg = msg.originalMessage.text;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2980,
        "y": 320,
        "wires": [
            [
                "760fa4dc.f12d5c",
                "9fd9269a.33bfc8"
            ]
        ]
    },
    {
        "id": "760fa4dc.f12d5c",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Send Message (new Room)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 240,
        "wires": []
    },
    {
        "id": "fd8c9753.82cf18",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Send message",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2940,
        "y": 200,
        "wires": [
            [
                "f60f6e8b.26885"
            ]
        ]
    },
    {
        "id": "9fd9269a.33bfc8",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Send message",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3240,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a813910b.42014",
        "type": "http in",
        "z": "7ee81df4.bfea84",
        "name": "Post messages from Rocket.chat",
        "url": "/messages",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 190,
        "y": 1480,
        "wires": [
            [
                "82e65057.262e2",
                "e6c9b776.ae6b68"
            ]
        ]
    },
    {
        "id": "82e65057.262e2",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Rocket.chat receiver",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1360,
        "wires": []
    },
    {
        "id": "3a9529df.ce3346",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Set message",
        "func": "//Respuesta a Telegram\n//chatId: 869282068\n//messageId: 1938\n//type: \"message\"\n//content: \"hola\"\n\nmsg.payload.chatId = msg.payload.visitor.token;\nmsg.payload.type = \"message\";\nmsg.payload.content = msg.payload.messages[0].msg;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 1360,
        "wires": [
            [
                "e78ac438.3320e8",
                "15478edd.b70101"
            ]
        ]
    },
    {
        "id": "15478edd.b70101",
        "type": "http response",
        "z": "7ee81df4.bfea84",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1160,
        "y": 1420,
        "wires": []
    },
    {
        "id": "23cef9dc.463986",
        "type": "comment",
        "z": "7ee81df4.bfea84",
        "name": "WebHook - Omnichannel",
        "info": "Todos los mensajes salientes de los operadores, seran reenviados aca.\nHay que identificar el CANAL (si es que tiene) y derivarlo correctamente.\n\n**TODO**: Adicionalmente, se generan otros mensajes, como cambio de departamento, o cierre de caso, que debemos procesar correctamente.",
        "x": 170,
        "y": 1520,
        "wires": []
    },
    {
        "id": "e6c9b776.ae6b68",
        "type": "switch",
        "z": "7ee81df4.bfea84",
        "name": "Switch canal",
        "property": "payload.visitor.customFields.chanel",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "telegram",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "whatsapp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 1480,
        "wires": [
            [
                "3a9529df.ce3346"
            ],
            [
                "8bfe58f7.33d068"
            ],
            [
                "6b5f84ff.2ec08c",
                "76b872b1.5c0dec"
            ]
        ]
    },
    {
        "id": "6b5f84ff.2ec08c",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "WebHook SIN procesar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1580,
        "wires": []
    },
    {
        "id": "c40adad0.7fef58",
        "type": "comment",
        "z": "7ee81df4.bfea84",
        "name": "TODO: Check ROOM or DEPARTMENT???",
        "info": "",
        "x": 2510,
        "y": 140,
        "wires": []
    },
    {
        "id": "76b872b1.5c0dec",
        "type": "http response",
        "z": "7ee81df4.bfea84",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 660,
        "y": 1660,
        "wires": []
    },
    {
        "id": "45b8e400.ff61fc",
        "type": "catch",
        "z": "7ee81df4.bfea84",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1570,
        "y": 1040,
        "wires": [
            [
                "de1a14f9.c3e948"
            ]
        ]
    },
    {
        "id": "de1a14f9.c3e948",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 1060,
        "wires": []
    },
    {
        "id": "9f55ee15.5d98a",
        "type": "http in",
        "z": "7ee81df4.bfea84",
        "name": "Webhook from whatsapp",
        "url": "/whatsapp/inbound",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "62fe07d7.edbfd8",
                "792d7f15.1913a",
                "230558cb.e84f88"
            ]
        ]
    },
    {
        "id": "62fe07d7.edbfd8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Whatsapp receiver",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 700,
        "wires": []
    },
    {
        "id": "792d7f15.1913a",
        "type": "http response",
        "z": "7ee81df4.bfea84",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 320,
        "y": 980,
        "wires": []
    },
    {
        "id": "426449b7.49f8b8",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "New visitor",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://rocket.it.mindbot.com.ar/api/v1/livechat/visitor",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1410,
        "y": 940,
        "wires": [
            [
                "56dfe2c5.cc323c",
                "176966ef.dae549"
            ]
        ]
    },
    {
        "id": "a14f41cc.7bee1",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Payload",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/visitor#payload\n\n//Obtener datos de Telegram\nlet fullName = msg.originalMessage.results[0].contact.name;\n\n//Usar nro de telefono de WhatsApp - lo espera en String\nlet token = msg.originalMessage.results[0].from;\n\nlet visitor = {};\n\nvisitor.name = fullName;\nvisitor.token = token;\nvisitor.customFields = [];\n\n//Custom Field para informar el CANAL\nlet phone = token;\n\nvisitor.customFields.push({key:\"chanel\", value:\"whatsapp\", overwrite:true});\n//TODO: Agregar dato de BOT vs de Agente (customFields)\nvisitor.customFields.push({key:\"phone\", value:token, overwrite:true});\n\nmsg.payload = {};\nmsg.payload.visitor = visitor;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 940,
        "wires": [
            [
                "e7cf9009.e204",
                "426449b7.49f8b8"
            ]
        ]
    },
    {
        "id": "e7cf9009.e204",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 880,
        "wires": []
    },
    {
        "id": "230558cb.e84f88",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data Payload",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/visitor#payload\n\n//Usar nro de telefono de WhatsApp como TOKEN\n//Guardo el mensaje original\nlet originalMessage = msg.payload;\nmsg.originalMessage = originalMessage;\n\nlet token = msg.originalMessage.results[0].from;\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/visitor/\" + token;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 780,
        "wires": [
            [
                "29f0e9db.4a95f6"
            ]
        ]
    },
    {
        "id": "29f0e9db.4a95f6",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 740,
        "y": 780,
        "wires": [
            [
                "1dbe982f.7899f8",
                "dabd246d.c50d88"
            ]
        ]
    },
    {
        "id": "1dbe982f.7899f8",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Get visitor data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "56dfe2c5.cc323c",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "New visitor Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 880,
        "wires": []
    },
    {
        "id": "baad55e3.dd67f8",
        "type": "comment",
        "z": "7ee81df4.bfea84",
        "name": "Example response",
        "info": "{\"visitor\":{\"_id\":\"5NeTKRb5YzZ4wE3Mi\",\"username\":\"guest-6\",\"ts\":\"2021-01-19T12:26:32.789Z\",\"ip\":\"192.168.1.1\",\"host\":\"rocket.it.mindbot.com.ar\",\"_updatedAt\":\"2021-01-19T12:26:32.791Z\",\"name\":\"Andres Petrillo\",\"token\":\"869282068\"},\"success\":true}\n\n{\"visitor\":{\"_id\":\"5NeTKRb5YzZ4wE3Mi\",\"username\":\"guest-6\",\"ts\":\"2021-01-19T12:26:32.789Z\",\"ip\":\"192.168.1.1\",\"host\":\"rocket.it.mindbot.com.ar\",\"_updatedAt\":\"2021-01-19T12:26:32.791Z\",\"name\":\"Andres Petrillo\",\"token\":\"869282068\"},\"success\":true}",
        "x": 870,
        "y": 880,
        "wires": []
    },
    {
        "id": "dabd246d.c50d88",
        "type": "switch",
        "z": "7ee81df4.bfea84",
        "name": "Check visitor exists",
        "property": "payload.visitor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 780,
        "wires": [
            [
                "54b021e6.d83d7",
                "176966ef.dae549"
            ],
            [
                "a14f41cc.7bee1",
                "7d0bfcff.af0944"
            ]
        ]
    },
    {
        "id": "176966ef.dae549",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get config (Obtengo room)",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar nro de telefono de Wahtsapp\nlet token = msg.originalMessage.results[0].from;\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/config?token=\" + token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1620,
        "y": 780,
        "wires": [
            [
                "9e119b.93cdce68"
            ]
        ]
    },
    {
        "id": "9e119b.93cdce68",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get config",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1870,
        "y": 780,
        "wires": [
            [
                "229e7882.3652a8"
            ]
        ]
    },
    {
        "id": "229e7882.3652a8",
        "type": "json",
        "z": "7ee81df4.bfea84",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2050,
        "y": 780,
        "wires": [
            [
                "d4a778ed.12b818",
                "49d87cc1.7d91b4"
            ]
        ]
    },
    {
        "id": "d4a778ed.12b818",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "to json",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 640,
        "wires": []
    },
    {
        "id": "f18bd20f.73c6c",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\n\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/message\"\n\nlet originalPayload = msg.payload;\n\nmsg.payload = {};\nmsg.payload.token = originalPayload.config.guest.token;\nmsg.payload.rid = originalPayload.config.room._id;\nmsg.payload.msg = msg.originalMessage.results[0].message.text;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2580,
        "y": 780,
        "wires": [
            [
                "3907b8a4.e28e88"
            ]
        ]
    },
    {
        "id": "562dd6e6.acaf78",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3000,
        "y": 640,
        "wires": []
    },
    {
        "id": "54b021e6.d83d7",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "visitor EXISTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 720,
        "wires": []
    },
    {
        "id": "7d0bfcff.af0944",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "visitor NOT EXISTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 1000,
        "wires": []
    },
    {
        "id": "49d87cc1.7d91b4",
        "type": "switch",
        "z": "7ee81df4.bfea84",
        "name": "Check room exists",
        "property": "payload.config.room",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2270,
        "y": 780,
        "wires": [
            [
                "f18bd20f.73c6c"
            ],
            [
                "8f25fb78.5d9c68"
            ]
        ]
    },
    {
        "id": "8f25fb78.5d9c68",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Get room (crear room)",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar telefono de WhatsApp como TOKEN\nlet token = msg.originalMessage.results[0].from;\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/room?token=\" + token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2300,
        "y": 900,
        "wires": [
            [
                "52f1b528.c5b1cc"
            ]
        ]
    },
    {
        "id": "52f1b528.c5b1cc",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Get room",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2540,
        "y": 900,
        "wires": [
            [
                "8c284ea4.6cb3b",
                "236503ab.0aacfc"
            ]
        ]
    },
    {
        "id": "8c284ea4.6cb3b",
        "type": "json",
        "z": "7ee81df4.bfea84",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2730,
        "y": 900,
        "wires": [
            [
                "32a393d9.c16a9c"
            ]
        ]
    },
    {
        "id": "32a393d9.c16a9c",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Send Message",
        "func": "//https://docs.rocket.chat/api/rest-api/methods/livechat/room\n\n//Usar id de Usuario de Telegram como TOKEN\n\n\nmsg.url = \"https://rocket.it.mindbot.com.ar/api/v1/livechat/message\"\n\nlet originalPayload = msg.payload;\n\nmsg.payload = {};\nmsg.payload.token = originalPayload.room.v.token;\nmsg.payload.rid = originalPayload.room._id;\nmsg.payload.msg = msg.originalMessage[0].message.text;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2900,
        "y": 900,
        "wires": [
            [
                "59a9d5ce.eb061c",
                "7b92ba36.fe3b44"
            ]
        ]
    },
    {
        "id": "59a9d5ce.eb061c",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Send Message (new Room)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3200,
        "y": 820,
        "wires": []
    },
    {
        "id": "3907b8a4.e28e88",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Send message",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2860,
        "y": 780,
        "wires": [
            [
                "562dd6e6.acaf78"
            ]
        ]
    },
    {
        "id": "7b92ba36.fe3b44",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "Send message",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3160,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "d2432921.d9d298",
        "type": "comment",
        "z": "7ee81df4.bfea84",
        "name": "TODO: Check ROOM or DEPARTMENT???",
        "info": "",
        "x": 2430,
        "y": 720,
        "wires": []
    },
    {
        "id": "8bfe58f7.33d068",
        "type": "function",
        "z": "7ee81df4.bfea84",
        "name": "Set message",
        "func": "//Respuesta a Whatsapp\n//chatId: 869282068\n//messageId: 1938\n//type: \"message\"\n//content: \"hola\"\nmsg.headers = {};\nmsg.headers['Authorization'] = \"App 9e66295544f076806ab9751a06f65722-dc79f206-56d4-4e42-b14a-61d60c4b36e0\";\nmsg.headers['Content-Type'] = \"application/json\";\nmsg.headers['Accept'] = \"application/json\";\n \nmsg.payload.scenarioKey = \"E1DC1DBC2BEED01B894E15AD3AEA64DA\";\nmsg.payload.destinations = [];\nmsg.payload.whatsApp = {};\n\nlet destination = {};\nlet to= {};\n\n//Nro de telefono del cliente\nto.phoneNumber = msg.payload.visitor.token;\ndestination.to = to;\n\nmsg.payload.destinations.push(destination);\n\nmsg.payload.whatsApp.text = msg.payload.messages[0].msg;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 1480,
        "wires": [
            [
                "60d612db.6df9dc",
                "d4471d75.eba42",
                "9289a7ad.1e2618"
            ]
        ]
    },
    {
        "id": "60d612db.6df9dc",
        "type": "http response",
        "z": "7ee81df4.bfea84",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1180,
        "y": 1540,
        "wires": []
    },
    {
        "id": "236503ab.0aacfc",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Get room",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2700,
        "y": 980,
        "wires": []
    },
    {
        "id": "d4471d75.eba42",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Whatsapp Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1640,
        "wires": []
    },
    {
        "id": "9289a7ad.1e2618",
        "type": "http request",
        "z": "7ee81df4.bfea84",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mp9856.api.infobip.com/omni/1/advanced",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1230,
        "y": 1480,
        "wires": [
            [
                "9e9b55d3.fcdd78"
            ]
        ]
    },
    {
        "id": "9e9b55d3.fcdd78",
        "type": "debug",
        "z": "7ee81df4.bfea84",
        "name": "Infobip Send Advanced",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 1480,
        "wires": []
    },
    {
        "id": "74fab392.722fac",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/client:document",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 310,
        "y": 120,
        "wires": [
            [
                "d1b3fb17.f40ba8",
                "31a42265.9745ce"
            ]
        ]
    },
    {
        "id": "d1b3fb17.f40ba8",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "var document = msg.req.params.document;\n\n//TODO: Servicio de provincia\nif (document == \"29129613\")\n{\n    msg.payload.clientId = 12345678;\n    msg.payload.insurances = [];\n    \n    var insurance = {};\n    insurance.code = 5123123;\n    insurance.ramo = 4;\n    insurance.address = \"Sarachaga 4956, CABA, Argentina\";\n    insurance.payMethod = \"Credit Card\";\n    \n    msg.payload.insurances.push(insurance);\n    \n    msg.statusCode = 200;\n} else {\n    msg.statusCode = 404;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 120,
        "wires": [
            [
                "1b3e6dc.1373c92"
            ]
        ]
    },
    {
        "id": "1b3e6dc.1373c92",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 120,
        "wires": []
    },
    {
        "id": "37ec261b.6418da",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/insurances/:clientId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 310,
        "y": 240,
        "wires": [
            [
                "861916ad.baaae8"
            ]
        ]
    },
    {
        "id": "861916ad.baaae8",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "var clientId = msg.req.params[\"clientId\"];\n\n//TODO: Servicio de provincia\n\nmsg.payload.clientId = 12345678;\nmsg.payload.insurances = [];\n\nvar today = new Date();\nvar nextweek = new Date();\nnextweek.setDate(today.getDate()+7);\n\nvar insurance = {};\ninsurance.code = 5123123;\ninsurance.ramo = 4;\ninsurance.address = \"Sarachaga 4956, CABA, Argentina\";\ninsurance.payMethod = \"Credit Card\";\ninsurance.nextPayment = nextweek;\n\nmsg.payload.insurances.push(insurance);\n\nvar insurance2 = {};\ninsurance2.code = 98734123;\ninsurance2.ramo = 8;\ninsurance2.address = \"Sarachaga 4956, CABA, Argentina\";\ninsurance2.payMethod = \"Credit Card\";\ninsurance2.nextPayment = nextweek;\n\nmsg.payload.insurances.push(insurance2);\n\nmsg.statusCode = 200;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 240,
        "wires": [
            [
                "c312c868.16aae8"
            ]
        ]
    },
    {
        "id": "c312c868.16aae8",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 240,
        "wires": []
    },
    {
        "id": "31a42265.9745ce",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "getClient",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 60,
        "wires": []
    },
    {
        "id": "66fe2f7b.a21dd",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/car/brand/:brandName",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 340,
        "wires": [
            [
                "836bf80b.747198",
                "cd412cd6.d883"
            ]
        ]
    },
    {
        "id": "47bf6c1.9169a94",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Marcas",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://apimt.provinciaseguros.com.ar/gateway/PS/PS-COTIZACION/2.2/valores/marcas/4/04100?apikey=9cc893f8-c119-4eeb-8d68-a3d305927fed",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 480,
        "wires": [
            [
                "c1ff2f41.ce92f"
            ]
        ]
    },
    {
        "id": "b32cf65f.ced7b8",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - brands",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 420,
        "wires": []
    },
    {
        "id": "836bf80b.747198",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Marcas",
        "func": "//Primero guardo marca que busco\nmsg.searchCriteria = msg.req.params.brandName; \n\nmsg.url = \"https://apimt.provinciaseguros.com.ar/gateway/PS/PS-COTIZACION/2.2/valores/marcas/4/04100?apikey=9cc893f8-c119-4eeb-8d68-a3d305927fed\";\n\nmsg.headers = {};\n\nmsg.headers['Authorization'] = \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJGSjg2R2NGM2pUYk5MT2NvNE52WmtVQ0lVbWZZQ3FvcXRPUWVNZmJoTmxFIn0.eyJqdGkiOiI4N2QxMGYwMy0xYWNjLTQyZDgtOGNhOC0zMTAzMzAzNmUxZjciLCJleHAiOjE2MTIyMzQ3NjAsIm5iZiI6MCwiaWF0IjoxNjEyMTk4NzYwLCJpc3MiOiJodHRwczovL2F1dGh0LnByb3ZpbmNpYXNlZ3Vyb3MuY29tLmFyL2F1dGgvcmVhbG1zL3BzIiwiYXVkIjoicHMyIiwic3ViIjoiZmI3ZDIzMjMtMThkZi00NWY1LTkyZGItYTU3YWRkNWI5M2VmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoicHMyIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiZjRmYTFiMDktMmY0Mi00ZTRmLTg3ODgtMjViYTkwZmMzOThmIiwiYWNyIjoiMSIsImFsbG93ZWQtb3JpZ2lucyI6WyJodHRwOi8vbG9jYWxob3N0OjgwODAiLCJodHRwczovL2F1dGh0LnByb3ZpbmNpYXNlZ3Vyb3MuY29tLmFyL2F1dGgiLCJodHRwOi8vbG9jYWxob3N0OjgwODEiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iLCJhcGl1c2VyIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicHMyLXRlc3QiOnsicm9sZXMiOlsidW1hX3Byb3RlY3Rpb24iXX0sInBvcnRhbC1wYXMiOnsicm9sZXMiOlsiMDA3OlJvbCBGdWxsIFVzZXIiXX0sInBzLWNvdGl6YWNpb24iOnsicm9sZXMiOlsidW1hX3Byb3RlY3Rpb24iXX0sInBzLXBsIjp7InJvbGVzIjpbInVtYV9wcm90ZWN0aW9uIl19LCJwcy1lbWlzaW9uIjp7InJvbGVzIjpbInVtYV9wcm90ZWN0aW9uIl19LCJwczIiOnsicm9sZXMiOlsicHMyRW1pc2lvbiIsInBzMkNvdGl6YWNpb24iLCJ1bWFfcHJvdGVjdGlvbiIsInBzMmluc3BlY2Npb24iLCJwc1phbWJhVXRpbCJdfSwiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjb2RpZ29Qcm9kdWN0b3IiOiI4NTA0IiwidXN1YXJpb19yZWN0b3IiOiJwZXRyaWxsb2EiLCJuYW1lIjoiQW5kcmVzIFBldHJpbGxvIiwicHJlZmVycmVkX3VzZXJuYW1lIjoicGV0cmlsbG9hQHBzZWd1cm9zLmNvbS5hciIsImxvY2FsZSI6ImVzIiwiZ2l2ZW5fbmFtZSI6IkFuZHJlcyIsImZhbWlseV9uYW1lIjoiUGV0cmlsbG8iLCJpZF9yb2xfcmVjdG9yIjoiMTAwMDEiLCJlbWFpbCI6InBldHJpbGxvYUBwc2VndXJvcy5jb20uYXIifQ.F6fYn5kyX_tikfMIGmNptsHzRXeb9DR36ZzYOuJSc8amKRQGDeM8HEaiR77seOToaEnb1cqBBzPO4vWmFFcy5S95veByu_u4QRGClXZPMjrWBKiXuVpwX5A0Y5ShzeGHF0zB2ZWwigJrspnbKx4MrDFrKGatDMWkhKRkJI7FrFw\";\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 480,
        "wires": [
            [
                "47bf6c1.9169a94"
            ]
        ]
    },
    {
        "id": "c1ff2f41.ce92f",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "function Search",
        "func": "var marcas = msg.payload;\nvar searchCriteria = msg.searchCriteria;\nvar results = [];\n\n//TODO: Funcion loca, recorrer array, o buscar alternativa\n//Aplanar json para ahcer busqueda en un nivel\n//ver fuzzyMatch\n\nmarcas.forEach(marca => {\n  if (marca.descripcion.toLowerCase().includes(searchCriteria))\n        results.push(marca);\n}) \n\nmsg.results = results;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 480,
        "wires": [
            [
                "b32cf65f.ced7b8",
                "af4b0342.00155"
            ]
        ]
    },
    {
        "id": "cd412cd6.d883",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Car/Brand",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "af4b0342.00155",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "function Response",
        "func": "let response = msg.results[0];\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 480,
        "wires": [
            [
                "8e7b71c6.29843"
            ]
        ]
    },
    {
        "id": "8e7b71c6.29843",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1290,
        "y": 340,
        "wires": []
    },
    {
        "id": "603fcb43.3f0794",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/car/model/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 600,
        "wires": [
            [
                "c7925d5e.b2c4e",
                "d5f623bc.09378"
            ]
        ]
    },
    {
        "id": "c7925d5e.b2c4e",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "Car/Model",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 560,
        "wires": []
    },
    {
        "id": "d5f623bc.09378",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Modelo",
        "func": "//Primero guardo marca que busco\nmsg.searchCriteria = msg.payload.model; \n\n\nmsg.url =  `https://apimt.provinciaseguros.com.ar/gateway/PS/PS-COTIZACION/2.2/valores/modelo/4/04100/${msg.payload.brand}/${msg.payload.year}/${msg.payload.new}?apikey=9cc893f8-c119-4eeb-8d68-a3d305927fed`;\n\nmsg.headers = {};\n\nmsg.headers['Authorization'] = \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJGSjg2R2NGM2pUYk5MT2NvNE52WmtVQ0lVbWZZQ3FvcXRPUWVNZmJoTmxFIn0.eyJqdGkiOiJkYzkxMzEzZS05NTcxLTQzZWItOWQ2NC02ODJmODYwZWJjYTIiLCJleHAiOjE2MTIyMzk2MjgsIm5iZiI6MCwiaWF0IjoxNjEyMjAzNjI4LCJpc3MiOiJodHRwczovL2F1dGh0LnByb3ZpbmNpYXNlZ3Vyb3MuY29tLmFyL2F1dGgvcmVhbG1zL3BzIiwiYXVkIjoicHMyIiwic3ViIjoiZmI3ZDIzMjMtMThkZi00NWY1LTkyZGItYTU3YWRkNWI5M2VmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoicHMyIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiMDY4NmI3ODktYWI4OS00ZGZiLWFmNWMtYmIzNzc2YzlhYWRmIiwiYWNyIjoiMSIsImFsbG93ZWQtb3JpZ2lucyI6WyJodHRwOi8vbG9jYWxob3N0OjgwODAiLCJodHRwczovL2F1dGh0LnByb3ZpbmNpYXNlZ3Vyb3MuY29tLmFyL2F1dGgiLCJodHRwOi8vbG9jYWxob3N0OjgwODEiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iLCJhcGl1c2VyIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicHMyLXRlc3QiOnsicm9sZXMiOlsidW1hX3Byb3RlY3Rpb24iXX0sInBvcnRhbC1wYXMiOnsicm9sZXMiOlsiMDA3OlJvbCBGdWxsIFVzZXIiXX0sInBzLWNvdGl6YWNpb24iOnsicm9sZXMiOlsidW1hX3Byb3RlY3Rpb24iXX0sInBzLXBsIjp7InJvbGVzIjpbInVtYV9wcm90ZWN0aW9uIl19LCJwcy1lbWlzaW9uIjp7InJvbGVzIjpbInVtYV9wcm90ZWN0aW9uIl19LCJwczIiOnsicm9sZXMiOlsicHMyRW1pc2lvbiIsInBzMkNvdGl6YWNpb24iLCJ1bWFfcHJvdGVjdGlvbiIsInBzMmluc3BlY2Npb24iLCJwc1phbWJhVXRpbCJdfSwiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjb2RpZ29Qcm9kdWN0b3IiOiI4NTA0IiwidXN1YXJpb19yZWN0b3IiOiJwZXRyaWxsb2EiLCJuYW1lIjoiQW5kcmVzIFBldHJpbGxvIiwicHJlZmVycmVkX3VzZXJuYW1lIjoicGV0cmlsbG9hQHBzZWd1cm9zLmNvbS5hciIsImxvY2FsZSI6ImVzIiwiZ2l2ZW5fbmFtZSI6IkFuZHJlcyIsImZhbWlseV9uYW1lIjoiUGV0cmlsbG8iLCJpZF9yb2xfcmVjdG9yIjoiMTAwMDEiLCJlbWFpbCI6InBldHJpbGxvYUBwc2VndXJvcy5jb20uYXIifQ.kpjLc-eI2lW0oYk2KEuHuANAPbRdZfbmtRVBpc0C06LyjQF6tL3UQBHaTl3Hdb5vcxKc1Zo8g-tqfiSt3kcQEWD8b5YeWo3IXJRbXaaPnHHVvPDkMxqeMrJO65sggGOM57Li2878IjjaRZ8rtuORVIP-NX4F2eQjRnWQRU68qEQ\";\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 700,
        "wires": [
            [
                "75b05f2f.efc48"
            ]
        ]
    },
    {
        "id": "8b524e35.de3c7",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "model",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 560,
        "wires": []
    },
    {
        "id": "75b05f2f.efc48",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Modelos",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 680,
        "y": 700,
        "wires": [
            [
                "8b524e35.de3c7",
                "764e2a97.a29284"
            ]
        ]
    },
    {
        "id": "5b662a2a.265cc4",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 560,
        "wires": []
    },
    {
        "id": "ab3a6e0d.08228",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1310,
        "y": 580,
        "wires": []
    },
    {
        "id": "f90bbab4.8648b8",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "function Response",
        "func": "let response = msg.results;\n\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1110,
        "y": 700,
        "wires": [
            [
                "ab3a6e0d.08228",
                "a21a06e4.5f1a18"
            ]
        ]
    },
    {
        "id": "84bcab1e.218388",
        "type": "http in",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "url": "/quotation",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 840,
        "wires": [
            [
                "8d1f8743.53ca18"
            ]
        ]
    },
    {
        "id": "8d1f8743.53ca18",
        "type": "function",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Modelo",
        "func": "//Necesito un body de busqueda\n\n\n\nmsg.url =  `https://apimt.provinciaseguros.com.ar/gateway/PS/PS-COTIZACION/2.2/cotizar?apikey=9cc893f8-c119-4eeb-8d68-a3d305927fed`;\n\nmsg.headers = {};\n\nmsg.headers['Authorization'] = \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJGSjg2R2NGM2pUYk5MT2NvNE52WmtVQ0lVbWZZQ3FvcXRPUWVNZmJoTmxFIn0.eyJqdGkiOiJkYzkxMzEzZS05NTcxLTQzZWItOWQ2NC02ODJmODYwZWJjYTIiLCJleHAiOjE2MTIyMzk2MjgsIm5iZiI6MCwiaWF0IjoxNjEyMjAzNjI4LCJpc3MiOiJodHRwczovL2F1dGh0LnByb3ZpbmNpYXNlZ3Vyb3MuY29tLmFyL2F1dGgvcmVhbG1zL3BzIiwiYXVkIjoicHMyIiwic3ViIjoiZmI3ZDIzMjMtMThkZi00NWY1LTkyZGItYTU3YWRkNWI5M2VmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoicHMyIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiMDY4NmI3ODktYWI4OS00ZGZiLWFmNWMtYmIzNzc2YzlhYWRmIiwiYWNyIjoiMSIsImFsbG93ZWQtb3JpZ2lucyI6WyJodHRwOi8vbG9jYWxob3N0OjgwODAiLCJodHRwczovL2F1dGh0LnByb3ZpbmNpYXNlZ3Vyb3MuY29tLmFyL2F1dGgiLCJodHRwOi8vbG9jYWxob3N0OjgwODEiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iLCJhcGl1c2VyIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicHMyLXRlc3QiOnsicm9sZXMiOlsidW1hX3Byb3RlY3Rpb24iXX0sInBvcnRhbC1wYXMiOnsicm9sZXMiOlsiMDA3OlJvbCBGdWxsIFVzZXIiXX0sInBzLWNvdGl6YWNpb24iOnsicm9sZXMiOlsidW1hX3Byb3RlY3Rpb24iXX0sInBzLXBsIjp7InJvbGVzIjpbInVtYV9wcm90ZWN0aW9uIl19LCJwcy1lbWlzaW9uIjp7InJvbGVzIjpbInVtYV9wcm90ZWN0aW9uIl19LCJwczIiOnsicm9sZXMiOlsicHMyRW1pc2lvbiIsInBzMkNvdGl6YWNpb24iLCJ1bWFfcHJvdGVjdGlvbiIsInBzMmluc3BlY2Npb24iLCJwc1phbWJhVXRpbCJdfSwiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJjb2RpZ29Qcm9kdWN0b3IiOiI4NTA0IiwidXN1YXJpb19yZWN0b3IiOiJwZXRyaWxsb2EiLCJuYW1lIjoiQW5kcmVzIFBldHJpbGxvIiwicHJlZmVycmVkX3VzZXJuYW1lIjoicGV0cmlsbG9hQHBzZWd1cm9zLmNvbS5hciIsImxvY2FsZSI6ImVzIiwiZ2l2ZW5fbmFtZSI6IkFuZHJlcyIsImZhbWlseV9uYW1lIjoiUGV0cmlsbG8iLCJpZF9yb2xfcmVjdG9yIjoiMTAwMDEiLCJlbWFpbCI6InBldHJpbGxvYUBwc2VndXJvcy5jb20uYXIifQ.kpjLc-eI2lW0oYk2KEuHuANAPbRdZfbmtRVBpc0C06LyjQF6tL3UQBHaTl3Hdb5vcxKc1Zo8g-tqfiSt3kcQEWD8b5YeWo3IXJRbXaaPnHHVvPDkMxqeMrJO65sggGOM57Li2878IjjaRZ8rtuORVIP-NX4F2eQjRnWQRU68qEQ\";\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 960,
        "wires": [
            [
                "74ffacf5.281704",
                "64a30bba.f6b394"
            ]
        ]
    },
    {
        "id": "74ffacf5.281704",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 840,
        "wires": []
    },
    {
        "id": "c13be3c5.cfa1e",
        "type": "http response",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1210,
        "y": 860,
        "wires": []
    },
    {
        "id": "64a30bba.f6b394",
        "type": "http request",
        "z": "7ee549ef.0fbb28",
        "name": "PSeguros - Modelos",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 760,
        "y": 880,
        "wires": [
            [
                "c13be3c5.cfa1e"
            ]
        ]
    },
    {
        "id": "a21a06e4.5f1a18",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 540,
        "wires": []
    },
    {
        "id": "f5665931.d4a3b8",
        "type": "inject",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "TEST!",
        "payloadType": "str",
        "x": 1560,
        "y": 220,
        "wires": [
            [
                "c2e9e61e.d28558"
            ]
        ]
    },
    {
        "id": "c2e9e61e.d28558",
        "type": "function-npm",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "const {distance, closest} = require('fastest-levenshtein');\n\nmsg.payload = {};\n\ntry {\n    // Print levenshtein-distance between 'fast' and 'faster' \nmsg.payload.distance = distance('fast', 'faster');\n//=> 2\n\n// Print string from array with lowest edit-distance to 'fast'\nmsg.payload.closest = closest('FIESTA TITANIUM', ['FIESTA  1.6 4P S              (KD) (018594)', 'FIESTA  1.6 4P TITANIUM       (KD) (018598)']);\n\n}catch (exception) {\n    node.error(\"Error\", exception)\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1770,
        "y": 220,
        "wires": [
            [
                "18b222a1.7b5e2d"
            ]
        ]
    },
    {
        "id": "18b222a1.7b5e2d",
        "type": "debug",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 220,
        "wires": []
    },
    {
        "id": "764e2a97.a29284",
        "type": "function-npm",
        "z": "7ee549ef.0fbb28",
        "name": "",
        "func": "const {distance, closest} = require('fastest-levenshtein');\n\ntry {\n    // Print levenshtein-distance between 'fast' and 'faster' \n    msg.payload.distance = distance('fast', 'faster');\n    //=> 2\n\n    // Print string from array with lowest edit-distance to 'fast'\n    //msg.payload.closest = closest('FIESTA TITANIUM', ['FIESTA  1.6 4P S              (KD) (018594)', 'FIESTA  1.6 4P TITANIUM       (KD) (018598)']);\n    \n    var modelos = msg.payload;\n     \n    var searchCriteriaPrincipal = msg.searchCriteria.split(\" \")[0];\n    var searchCriteria = msg.searchCriteria;\n    var preResults = [];\n    var results = [];\n    var flatened = [];\n    \n    \n    //TODO: Funcion loca, recorrer array, o buscar alternativa\n    //Aplanar json para ahcer busqueda en un nivel\n    //ver fuzzyMatch\n    //matchear similitud searchCriteria contra modelo.descripcion y\n    // pushear codigo\n    modelos.forEach(modelo => {\n      if (modelo.descripcion.toLowerCase().includes(searchCriteriaPrincipal.toLowerCase()))\n            preResults.push(modelo);\n    }) \n    \n    preResults.forEach(modeloFiltered => {\n        let dist = distance(searchCriteria, modeloFiltered.descripcion.replace(/ /g, ''));\n        results.push({dist, modeloFiltered});\n        //flatened.push(modelo.descripcion.replace(/ /g, ''));\n    })\n    \n    //var result = closest(searchCriteria, flatened);\n    //results.push(result);\n    msg.searchCriteriaPrincipal = searchCriteriaPrincipal;\n    msg.preresults = preResults;\n    \n    //Algoritmo para ordenar\n    msg.results = results.sort((a,b) => (a.dist > b.dist) ? 1 : ((b.dist > a.dist) ? -1 : 0));\n\nreturn msg;\n    \n\n}catch (exception) {\n    node.error(\"Error\", exception)\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 700,
        "wires": [
            [
                "f90bbab4.8648b8",
                "5b662a2a.265cc4"
            ]
        ]
    }
]